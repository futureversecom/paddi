# generated by datamodel-codegen:
#   filename:  training_request.json

from __future__ import annotations

from typing import Optional

from pydantic import BaseModel, Field

from . import training_output
from .segments import agent_config, scenario_config


class RewardConfig(BaseModel):
    win_round: float = Field(..., title='Win Round')
    lose_round: float = Field(..., title='Lose Round')
    paddle_hit: float = Field(..., title='Paddle Hit')
    near_miss_multiplier: float = Field(..., title='Near Miss Multiplier')
    near_miss_exponent: float = Field(..., title='Near Miss Exponent')
    near_miss_min_distance: float = Field(..., title='Near Miss Min Distance')
    survival_reward_multiplier: float = Field(..., title='Survival Reward Multiplier')
    endurance_penalty_multiplier: float = Field(..., title='Endurance Penalty Multiplier')


class TrainingRequest(BaseModel):
    training_id: str = Field(..., title='Training Id')
    training_units: int = Field(..., title='Training Units')
    player_config: agent_config.AgentConfig
    scenario: scenario_config.ScenarioConfig
    reward_config: RewardConfig
    training_output: Optional[training_output.TrainingOutput] = Field(
        None, description='Output of the previous iteration'
    )
