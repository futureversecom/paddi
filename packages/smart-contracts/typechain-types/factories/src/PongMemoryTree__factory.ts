/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers'
import type { Provider, TransactionRequest } from '@ethersproject/providers'
import type { PromiseOrValue } from '../../common'
import type {
  PongMemoryTree,
  PongMemoryTreeInterface,
} from '../../src/PongMemoryTree'

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: 'brainAddress',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'ASTOPaymentFailed',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: 'errMsg',
        type: 'string',
      },
    ],
    name: 'AccessError',
    type: 'error',
  },
  {
    inputs: [],
    name: 'ComputeInactive',
    type: 'error',
  },
  {
    inputs: [],
    name: 'ComputeRequestClosed',
    type: 'error',
  },
  {
    inputs: [],
    name: 'ComputeRequestRevoked',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint64',
        name: 'slaTimestamp',
        type: 'uint64',
      },
      {
        internalType: 'uint64',
        name: 'currentTimestamp',
        type: 'uint64',
      },
    ],
    name: 'ComputeSLANotReached',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: 'errMsg',
        type: 'string',
      },
      {
        internalType: 'uint256',
        name: 'availableAmount',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'requestedAmount',
        type: 'uint256',
      },
    ],
    name: 'InsufficientBalance',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'expected',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'actual',
        type: 'address',
      },
    ],
    name: 'InvalidBrainAddress',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: 'errMsg',
        type: 'string',
      },
      {
        internalType: 'address',
        name: 'expectedCaller',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'actualCaller',
        type: 'address',
      },
    ],
    name: 'InvalidCaller',
    type: 'error',
  },
  {
    inputs: [],
    name: 'InvalidComputeIndex',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: 'errMsg',
        type: 'string',
      },
      {
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
    ],
    name: 'InvalidComputeRequest',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: 'errMsg',
        type: 'string',
      },
    ],
    name: 'InvalidDisbursement',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: 'errMsg',
        type: 'string',
      },
    ],
    name: 'InvalidInput',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'index',
        type: 'uint256',
      },
    ],
    name: 'InvalidRegistryIndex',
    type: 'error',
  },
  {
    inputs: [],
    name: 'InvalidSignature',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: 'errMsg',
        type: 'string',
      },
      {
        internalType: 'uint256',
        name: 'requiredAmount',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'receivedAmount',
        type: 'uint256',
      },
    ],
    name: 'PaymentError',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'brainAddress',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'brainId',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'nodeId',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'bytes32',
        name: 'nodeHash',
        type: 'bytes32',
      },
    ],
    name: 'MemoryNodeAdded',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'brainAddress',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'brainId',
        type: 'uint256',
      },
      {
        internalType: 'bytes32',
        name: 'nodeHash',
        type: 'bytes32',
      },
      {
        internalType: 'string',
        name: 'storageURI',
        type: 'string',
      },
      {
        internalType: 'bytes',
        name: 'signature',
        type: 'bytes',
      },
    ],
    name: 'addMemoryTree',
    outputs: [
      {
        internalType: 'uint256',
        name: 'treeId',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'nodeId',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'parentNodeId',
        type: 'uint256',
      },
      {
        internalType: 'bytes32',
        name: 'nodeHash',
        type: 'bytes32',
      },
      {
        internalType: 'string',
        name: 'storageURI',
        type: 'string',
      },
      {
        internalType: 'bytes',
        name: 'signature',
        type: 'bytes',
      },
    ],
    name: 'addNode',
    outputs: [
      {
        internalType: 'uint256',
        name: 'nodeId',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'index',
        type: 'uint256',
      },
    ],
    name: 'getMemoryNode',
    outputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'memoryTreeId',
            type: 'uint256',
          },
          {
            internalType: 'uint256[]',
            name: 'children',
            type: 'uint256[]',
          },
          {
            internalType: 'string',
            name: 'storageURI',
            type: 'string',
          },
        ],
        internalType: 'struct IMemoryTree.MemoryNode',
        name: 'node',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'index',
        type: 'uint256',
      },
    ],
    name: 'getMemoryTreeDetails',
    outputs: [
      {
        components: [
          {
            internalType: 'address',
            name: 'brainAddress',
            type: 'address',
          },
          {
            internalType: 'uint256',
            name: 'brainId',
            type: 'uint256',
          },
          {
            internalType: 'uint256[]',
            name: 'rootNodes',
            type: 'uint256[]',
          },
        ],
        internalType: 'struct IMemoryTree.MemoryTreeDetails',
        name: 'details',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getSigner',
    outputs: [
      {
        internalType: 'address',
        name: 'signer',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'treeId',
        type: 'uint256',
      },
    ],
    name: 'memoryNodeIdsOfMemoryTree',
    outputs: [
      {
        internalType: 'uint256[]',
        name: 'indexes',
        type: 'uint256[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'treeId',
        type: 'uint256',
      },
    ],
    name: 'memoryNodesOfMemoryTree',
    outputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'memoryTreeId',
            type: 'uint256',
          },
          {
            internalType: 'uint256[]',
            name: 'children',
            type: 'uint256[]',
          },
          {
            internalType: 'string',
            name: 'storageURI',
            type: 'string',
          },
        ],
        internalType: 'struct IMemoryTree.MemoryNode[]',
        name: 'treeNodes',
        type: 'tuple[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'brainAddress',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'brainId',
        type: 'uint256',
      },
    ],
    name: 'memoryTreesOfBrain',
    outputs: [
      {
        internalType: 'uint256[]',
        name: 'indexes',
        type: 'uint256[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'signer',
        type: 'address',
      },
    ],
    name: 'setSigner',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes4',
        name: 'interfaceId',
        type: 'bytes4',
      },
    ],
    name: 'supportsInterface',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
] as const

const _bytecode =
  '0x60a060405234801561001057600080fd5b5060405162001b9738038062001b97833981016040819052610031916100ad565b61003a3361005d565b600180546001600160a01b031916331790556001600160a01b03166080526100dd565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100bf57600080fd5b81516001600160a01b03811681146100d657600080fd5b9392505050565b608051611a9762000100600039600081816104c201526105100152611a976000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80638da5cb5b1161008c578063d963581611610066578063d9635816146101d8578063dc5c4dca146101eb578063ebd7c1681461020b578063f2fde38b1461022b57600080fd5b80638da5cb5b1461017f578063910f031c1461019057806399816c4c146101b857600080fd5b806301ffc9a7146100d4578063445efb59146100fc5780636c19e7831461011d5780636f82ba2714610132578063715018a6146101525780637ac3c02f1461015a575b600080fd5b6100e76100e23660046113a4565b61023e565b60405190151581526020015b60405180910390f35b61010f61010a3660046114ba565b610275565b6040519081526020016100f3565b61013061012b36600461154d565b6103dd565b005b61014561014036600461156a565b610407565b6040516100f391906115be565b6101306104a9565b6001546001600160a01b03165b6040516001600160a01b0390911681526020016100f3565b6000546001600160a01b0316610167565b6101a361019e3660046115fd565b6104bd565b604080519283526020830191909152016100f3565b6101cb6101c636600461168d565b610567565b6040516100f391906116b9565b6101cb6101e636600461156a565b6106b5565b6101fe6101f936600461156a565b6108d2565b6040516100f3919061178e565b61021e61021936600461156a565b610ac1565b6040516100f391906117f0565b61013061023936600461154d565b610bea565b60006001600160e01b0319821663151c454160e11b148061026f57506301ffc9a760e01b6001600160e01b03198316145b92915050565b600085858560405160200161028c93929190611803565b60408051601f198184030181526020601f8601819004810284018101909252848352919085908590819084018382808284376000920182905250855160208701209093506102e792508491506102e190610c63565b90610cb6565b6001549091506001600160a01b0380831691161461031857604051638baa579f60e01b815260040160405180910390fd5b60008981526005602090815260408083208054845260049092529091208054600182015461034f916001600160a01b031690610cda565b815461035b908a610dad565b81546001830154604080516001600160a01b03909316835260208301919091528101829052606081018c90529096507f7b06466216d59eef8c3e9af46549eecf860e594162c5c7f7cc96995beea938a79060800160405180910390a1506001908101805491820181556000908152602090200184905550505095945050505050565b6103e5610e2f565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b60408051606080820183526000808352602080840182905283850183905285825260048152908490208451928301855280546001600160a01b03168352600181015483830152600281018054865181850281018501885281815295969495929486019383018282801561049957602002820191906000526020600020905b815481526020019060010190808311610485575b5050505050815250509050919050565b6104b1610e2f565b6104bb6000610e89565b565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316886001600160a01b03161461054a57604051635ffe91d360e11b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152891660248201526044015b60405180910390fd5b610558888888888888610ed9565b91509150965096945050505050565b606060025467ffffffffffffffff811115610584576105846113d5565b6040519080825280602002602001820160405280156105ad578160200160208202803683370190505b5090506000805b6002548110156106ac576000818152600460209081526040808320815160608101835281546001600160a01b0316815260018201548185015260028201805484518187028101870186528181529295939486019383018282801561063757602002820191906000526020600020905b815481526020019060010190808311610623575b5050505050815250509050856001600160a01b031681600001516001600160a01b031614801561066a5750848160200151145b15610699578184848151811061068257610682611830565b602090810291909101015261069683611846565b92505b50806106a481611846565b9150506105b4565b50815292915050565b606060035467ffffffffffffffff8111156106d2576106d26113d5565b6040519080825280602002602001820160405280156106fb578160200160208202803683370190505b506000838152600460209081526040808320600201805482518185028101850190935280835294955092938493919283018282801561075957602002820191906000526020600020905b815481526020019060010190808311610745575b5050505050905060005b81518110156107c05781818151811061077e5761077e611830565b602002602001015184848151811061079857610798611830565b60209081029190910101526107ac83611846565b9250806107b881611846565b915050610763565b5060005b828110156108c9576000600560008684815181106107e4576107e4611830565b60200260200101518152602001908152602001600020905060008160010180548060200260200160405190810160405280929190818152602001828054801561084c57602002820191906000526020600020905b815481526020019060010190808311610838575b5050505050905060005b81518110156108b35781818151811061087157610871611830565b602002602001015187878151811061088b5761088b611830565b602090810291909101015261089f86611846565b9550806108ab81611846565b915050610856565b50505080806108c190611846565b9150506107c4565b50508152919050565b606060006108df836106b5565b9050805167ffffffffffffffff8111156108fb576108fb6113d5565b60405190808252806020026020018201604052801561095057816020015b61093d60405180606001604052806000815260200160608152602001606081525090565b8152602001906001900390816109195790505b50915060005b8151811015610aba576005600083838151811061097557610975611830565b6020026020010151815260200190815260200160002060405180606001604052908160008201548152602001600182018054806020026020016040519081016040528092919081815260200182805480156109ef57602002820191906000526020600020905b8154815260200190600101908083116109db575b50505050508152602001600282018054610a089061186d565b80601f0160208091040260200160405190810160405280929190818152602001828054610a349061186d565b8015610a815780601f10610a5657610100808354040283529160200191610a81565b820191906000526020600020905b815481529060010190602001808311610a6457829003601f168201915b505050505081525050838281518110610a9c57610a9c611830565b60200260200101819052508080610ab290611846565b915050610956565b5050919050565b610ae560405180606001604052806000815260200160608152602001606081525090565b60008281526005602090815260409182902082516060810184528154815260018201805485518186028101860190965280865291949293858101939290830182828015610b5157602002820191906000526020600020905b815481526020019060010190808311610b3d575b50505050508152602001600282018054610b6a9061186d565b80601f0160208091040260200160405190810160405280929190818152602001828054610b969061186d565b80156104995780601f10610bb857610100808354040283529160200191610499565b820191906000526020600020905b815481529060010190602001808311610bc657505050919092525091949350505050565b610bf2610e2f565b6001600160a01b038116610c575760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610541565b610c6081610e89565b50565b6040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101829052600090605c01604051602081830303815290604052805190602001209050919050565b6000806000610cc585856110f1565b91509150610cd281611136565b509392505050565b6040516331a9108f60e11b8152600481018290526000906001600160a01b03841690636352211e90602401602060405180830381865afa158015610d22573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d4691906118a7565b9050336001600160a01b03821614610da857604080518082018252601781527f4d7573742062652063616c6c6564206279206f776e65720000000000000000006020820152905163b4f0c18560e01b81526105419190839033906004016118c4565b505050565b60035460408051606081018252848152815160008082526020808301855280840192835283850187905285825260058152939020825181559051805192939192610dfd9260018501920190611344565b5060408201516002820190610e129082611945565b50905050600360008154610e2590611846565b9091555092915050565b6000546001600160a01b031633146104bb5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610541565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60008087878787604051602001610ef39493929190611a05565b60408051601f198184030181526020601f870181900481028401810190925285835291908690869081908401838280828437600092018290525085516020870120909350610f4892508491506102e190610c63565b6001549091506001600160a01b03808316911614610f7957604051638baa579f60e01b815260040160405180910390fd5b610f838b8b610cda565b6040805160018082528183019092526000916020808301908036833701905050905060405180606001604052808d6001600160a01b031681526020018c81526020018281525060046000600254815260200190815260200160002060008201518160000160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550602082015181600101556040820151816002019080519060200190611031929190611344565b509050506110416002548a610dad565b604080516001600160a01b038f168152602081018e9052908101829052606081018c90529095507f7b06466216d59eef8c3e9af46549eecf860e594162c5c7f7cc96995beea938a79060800160405180910390a1846004600060025481526020019081526020016000206002016000815481106110c0576110c0611830565b600091825260208220019190915560028054916110dc83611846565b91905055955050505050965096945050505050565b60008082516041036111275760208301516040840151606085015160001a61111b87828585611280565b9450945050505061112f565b506000905060025b9250929050565b600081600481111561114a5761114a611a4b565b036111525750565b600181600481111561116657611166611a4b565b036111b35760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401610541565b60028160048111156111c7576111c7611a4b565b036112145760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610541565b600381600481111561122857611228611a4b565b03610c605760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610541565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311156112b7575060009050600361133b565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa15801561130b573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166113345760006001925092505061133b565b9150600090505b94509492505050565b82805482825590600052602060002090810192821561137f579160200282015b8281111561137f578251825591602001919060010190611364565b5061138b92915061138f565b5090565b5b8082111561138b5760008155600101611390565b6000602082840312156113b657600080fd5b81356001600160e01b0319811681146113ce57600080fd5b9392505050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126113fc57600080fd5b813567ffffffffffffffff80821115611417576114176113d5565b604051601f8301601f19908116603f0116810190828211818310171561143f5761143f6113d5565b8160405283815286602085880101111561145857600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008083601f84011261148a57600080fd5b50813567ffffffffffffffff8111156114a257600080fd5b60208301915083602082850101111561112f57600080fd5b6000806000806000608086880312156114d257600080fd5b8535945060208601359350604086013567ffffffffffffffff808211156114f857600080fd5b61150489838a016113eb565b9450606088013591508082111561151a57600080fd5b5061152788828901611478565b969995985093965092949392505050565b6001600160a01b0381168114610c6057600080fd5b60006020828403121561155f57600080fd5b81356113ce81611538565b60006020828403121561157c57600080fd5b5035919050565b600081518084526020808501945080840160005b838110156115b357815187529582019590820190600101611597565b509495945050505050565b6020815260018060a01b03825116602082015260208201516040820152600060408301516060808401526115f56080840182611583565b949350505050565b60008060008060008060a0878903121561161657600080fd5b863561162181611538565b95506020870135945060408701359350606087013567ffffffffffffffff8082111561164c57600080fd5b6116588a838b016113eb565b9450608089013591508082111561166e57600080fd5b5061167b89828a01611478565b979a9699509497509295939492505050565b600080604083850312156116a057600080fd5b82356116ab81611538565b946020939093013593505050565b6020808252825182820181905260009190848201906040850190845b818110156116f1578351835292840192918401916001016116d5565b50909695505050505050565b60005b83811015611718578181015183820152602001611700565b50506000910152565b600081518084526117398160208601602086016116fd565b601f01601f19169290920160200192915050565b80518252600060208201516060602085015261176c6060850182611583565b9050604083015184820360408601526117858282611721565b95945050505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156117e357603f198886030184526117d185835161174d565b945092850192908501906001016117b5565b5092979650505050505050565b6020815260006113ce602083018461174d565b838152826020820152600082516118218160408501602087016116fd565b91909101604001949350505050565b634e487b7160e01b600052603260045260246000fd5b60006001820161186657634e487b7160e01b600052601160045260246000fd5b5060010190565b600181811c9082168061188157607f821691505b6020821081036118a157634e487b7160e01b600052602260045260246000fd5b50919050565b6000602082840312156118b957600080fd5b81516113ce81611538565b6060815260006118d76060830186611721565b6001600160a01b0394851660208401529290931660409091015292915050565b601f821115610da857600081815260208120601f850160051c8101602086101561191e5750805b601f850160051c820191505b8181101561193d5782815560010161192a565b505050505050565b815167ffffffffffffffff81111561195f5761195f6113d5565b6119738161196d845461186d565b846118f7565b602080601f8311600181146119a857600084156119905750858301515b600019600386901b1c1916600185901b17855561193d565b600085815260208120601f198616915b828110156119d7578886015182559484019460019091019084016119b8565b50858210156119f55787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6bffffffffffffffffffffffff198560601b16815283601482015282603482015260008251611a3b8160548501602087016116fd565b9190910160540195945050505050565b634e487b7160e01b600052602160045260246000fdfea264697066735822122059fabbd2c2c70915f802b315e63ee58e292aaf221a02737ded9bdd0d11479f5964736f6c63430008110033'

type PongMemoryTreeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>

const isSuperArgs = (
  xs: PongMemoryTreeConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1

export class PongMemoryTree__factory extends ContractFactory {
  constructor(...args: PongMemoryTreeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args)
    } else {
      super(_abi, _bytecode, args[0])
    }
  }

  override deploy(
    brainAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> },
  ): Promise<PongMemoryTree> {
    return super.deploy(
      brainAddress,
      overrides || {},
    ) as Promise<PongMemoryTree>
  }
  override getDeployTransaction(
    brainAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(brainAddress, overrides || {})
  }
  override attach(address: string): PongMemoryTree {
    return super.attach(address) as PongMemoryTree
  }
  override connect(signer: Signer): PongMemoryTree__factory {
    return super.connect(signer) as PongMemoryTree__factory
  }

  static readonly bytecode = _bytecode
  static readonly abi = _abi
  static createInterface(): PongMemoryTreeInterface {
    return new utils.Interface(_abi) as PongMemoryTreeInterface
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider,
  ): PongMemoryTree {
    return new Contract(address, _abi, signerOrProvider) as PongMemoryTree
  }
}
