/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers'
import type { Provider, TransactionRequest } from '@ethersproject/providers'
import type { PromiseOrValue } from '../../common'
import type { MockASTO, MockASTOInterface } from '../../src/MockASTO'

const _abi = [
  {
    inputs: [],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
    ],
    name: 'Approval',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
    ],
    name: 'Transfer',
    type: 'event',
  },
  {
    inputs: [],
    name: 'FAUCET_AMOUNT',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
    ],
    name: 'allowance',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'approve',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'balanceOf',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'decimals',
    outputs: [
      {
        internalType: 'uint8',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'subtractedValue',
        type: 'uint256',
      },
    ],
    name: 'decreaseAllowance',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'faucet',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'addedValue',
        type: 'uint256',
      },
    ],
    name: 'increaseAllowance',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'name',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'symbol',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'totalSupply',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'transfer',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'transferFrom',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
] as const

const _bytecode =
  '0x608060405234801561001057600080fd5b50604051806060016040528060238152602001610b39602391396040805180820190915260048152634153544f60e01b602082015260036100518382610105565b50600461005e8282610105565b5050506101c4565b634e487b7160e01b600052604160045260246000fd5b600181811c9082168061009057607f821691505b6020821081036100b057634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561010057600081815260208120601f850160051c810160208610156100dd5750805b601f850160051c820191505b818110156100fc578281556001016100e9565b5050505b505050565b81516001600160401b0381111561011e5761011e610066565b6101328161012c845461007c565b846100b6565b602080601f831160018114610167576000841561014f5750858301515b600019600386901b1c1916600185901b1785556100fc565b600085815260208120601f198616915b8281101561019657888601518255948401946001909101908401610177565b50858210156101b45787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b610966806101d36000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c806370a082311161008c578063a457c2d711610066578063a457c2d71461019d578063a9059cbb146101b0578063dd62ed3e146101c3578063de5f72fd146101d657600080fd5b806370a082311461015c578063766976401461018557806395d89b411461019557600080fd5b806306fdde03146100d4578063095ea7b3146100f257806318160ddd1461011557806323b872dd14610127578063313ce5671461013a5780633950935114610149575b600080fd5b6100dc6101e0565b6040516100e991906107b0565b60405180910390f35b61010561010036600461081a565b610272565b60405190151581526020016100e9565b6002545b6040519081526020016100e9565b610105610135366004610844565b61028c565b604051601281526020016100e9565b61010561015736600461081a565b6102b0565b61011961016a366004610880565b6001600160a01b031660009081526020819052604090205490565b61011968056bc75e2d6310000081565b6100dc6102d2565b6101056101ab36600461081a565b6102e1565b6101056101be36600461081a565b610361565b6101196101d13660046108a2565b61036f565b6101de61039a565b005b6060600380546101ef906108d5565b80601f016020809104026020016040519081016040528092919081815260200182805461021b906108d5565b80156102685780601f1061023d57610100808354040283529160200191610268565b820191906000526020600020905b81548152906001019060200180831161024b57829003601f168201915b5050505050905090565b6000336102808185856103af565b60019150505b92915050565b60003361029a8582856104d3565b6102a585858561054d565b506001949350505050565b6000336102808185856102c3838361036f565b6102cd919061090f565b6103af565b6060600480546101ef906108d5565b600033816102ef828661036f565b9050838110156103545760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102a582868684036103af565b60003361028081858561054d565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6103ad3368056bc75e2d631000006106f1565b565b6001600160a01b0383166104115760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161034b565b6001600160a01b0382166104725760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161034b565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60006104df848461036f565b90506000198114610547578181101561053a5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161034b565b61054784848484036103af565b50505050565b6001600160a01b0383166105b15760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161034b565b6001600160a01b0382166106135760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161034b565b6001600160a01b0383166000908152602081905260409020548181101561068b5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161034b565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3610547565b6001600160a01b0382166107475760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161034b565b8060026000828254610759919061090f565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b600060208083528351808285015260005b818110156107dd578581018301518582016040015282016107c1565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461081557600080fd5b919050565b6000806040838503121561082d57600080fd5b610836836107fe565b946020939093013593505050565b60008060006060848603121561085957600080fd5b610862846107fe565b9250610870602085016107fe565b9150604084013590509250925092565b60006020828403121561089257600080fd5b61089b826107fe565b9392505050565b600080604083850312156108b557600080fd5b6108be836107fe565b91506108cc602084016107fe565b90509250929050565b600181811c908216806108e957607f821691505b60208210810361090957634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561028657634e487b7160e01b600052601160045260246000fdfea26469706673582212203c115e056ac2684ca90ad78f4053c51f395c4472ffd3286e79e87ec3dc0b2c1764736f6c63430008110033416c7465726564205374617465204d616368696e65205574696c69747920546f6b656e'

type MockASTOConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>

const isSuperArgs = (
  xs: MockASTOConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1

export class MockASTO__factory extends ContractFactory {
  constructor(...args: MockASTOConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args)
    } else {
      super(_abi, _bytecode, args[0])
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> },
  ): Promise<MockASTO> {
    return super.deploy(overrides || {}) as Promise<MockASTO>
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {})
  }
  override attach(address: string): MockASTO {
    return super.attach(address) as MockASTO
  }
  override connect(signer: Signer): MockASTO__factory {
    return super.connect(signer) as MockASTO__factory
  }

  static readonly bytecode = _bytecode
  static readonly abi = _abi
  static createInterface(): MockASTOInterface {
    return new utils.Interface(_abi) as MockASTOInterface
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider,
  ): MockASTO {
    return new Contract(address, _abi, signerOrProvider) as MockASTO
  }
}
