/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers'
import type { Provider, TransactionRequest } from '@ethersproject/providers'
import type { PromiseOrValue } from '../../../../../common'
import type {
  MemoryTreeEnumerable,
  MemoryTreeEnumerableInterface,
} from '../../../../../lib/protocol-core/contracts/samples/MemoryTreeEnumerable'

const _abi = [
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'ASTOPaymentFailed',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: 'errMsg',
        type: 'string',
      },
    ],
    name: 'AccessError',
    type: 'error',
  },
  {
    inputs: [],
    name: 'ComputeInactive',
    type: 'error',
  },
  {
    inputs: [],
    name: 'ComputeRequestClosed',
    type: 'error',
  },
  {
    inputs: [],
    name: 'ComputeRequestRevoked',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint64',
        name: 'slaTimestamp',
        type: 'uint64',
      },
      {
        internalType: 'uint64',
        name: 'currentTimestamp',
        type: 'uint64',
      },
    ],
    name: 'ComputeSLANotReached',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: 'errMsg',
        type: 'string',
      },
      {
        internalType: 'uint256',
        name: 'availableAmount',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'requestedAmount',
        type: 'uint256',
      },
    ],
    name: 'InsufficientBalance',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: 'errMsg',
        type: 'string',
      },
      {
        internalType: 'address',
        name: 'expectedCaller',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'actualCaller',
        type: 'address',
      },
    ],
    name: 'InvalidCaller',
    type: 'error',
  },
  {
    inputs: [],
    name: 'InvalidComputeIndex',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: 'errMsg',
        type: 'string',
      },
      {
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
    ],
    name: 'InvalidComputeRequest',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: 'errMsg',
        type: 'string',
      },
    ],
    name: 'InvalidDisbursement',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: 'errMsg',
        type: 'string',
      },
    ],
    name: 'InvalidInput',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'index',
        type: 'uint256',
      },
    ],
    name: 'InvalidRegistryIndex',
    type: 'error',
  },
  {
    inputs: [],
    name: 'InvalidSignature',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: 'errMsg',
        type: 'string',
      },
      {
        internalType: 'uint256',
        name: 'requiredAmount',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'receivedAmount',
        type: 'uint256',
      },
    ],
    name: 'PaymentError',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'brainAddress',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'brainId',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'nodeId',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'bytes32',
        name: 'nodeHash',
        type: 'bytes32',
      },
    ],
    name: 'MemoryNodeAdded',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'brainAddress',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'brainId',
        type: 'uint256',
      },
      {
        internalType: 'bytes32',
        name: 'nodeHash',
        type: 'bytes32',
      },
      {
        internalType: 'string',
        name: 'storageURI',
        type: 'string',
      },
      {
        internalType: 'bytes',
        name: 'signature',
        type: 'bytes',
      },
    ],
    name: 'addMemoryTree',
    outputs: [
      {
        internalType: 'uint256',
        name: 'treeId',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'nodeId',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'parentNodeId',
        type: 'uint256',
      },
      {
        internalType: 'bytes32',
        name: 'nodeHash',
        type: 'bytes32',
      },
      {
        internalType: 'string',
        name: 'storageURI',
        type: 'string',
      },
      {
        internalType: 'bytes',
        name: 'signature',
        type: 'bytes',
      },
    ],
    name: 'addNode',
    outputs: [
      {
        internalType: 'uint256',
        name: 'nodeId',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'index',
        type: 'uint256',
      },
    ],
    name: 'getMemoryNode',
    outputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'memoryTreeId',
            type: 'uint256',
          },
          {
            internalType: 'uint256[]',
            name: 'children',
            type: 'uint256[]',
          },
          {
            internalType: 'string',
            name: 'storageURI',
            type: 'string',
          },
        ],
        internalType: 'struct IMemoryTree.MemoryNode',
        name: 'node',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'index',
        type: 'uint256',
      },
    ],
    name: 'getMemoryTreeDetails',
    outputs: [
      {
        components: [
          {
            internalType: 'address',
            name: 'brainAddress',
            type: 'address',
          },
          {
            internalType: 'uint256',
            name: 'brainId',
            type: 'uint256',
          },
          {
            internalType: 'uint256[]',
            name: 'rootNodes',
            type: 'uint256[]',
          },
        ],
        internalType: 'struct IMemoryTree.MemoryTreeDetails',
        name: 'details',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getSigner',
    outputs: [
      {
        internalType: 'address',
        name: 'signer',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'treeId',
        type: 'uint256',
      },
    ],
    name: 'memoryNodeIdsOfMemoryTree',
    outputs: [
      {
        internalType: 'uint256[]',
        name: 'indexes',
        type: 'uint256[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'treeId',
        type: 'uint256',
      },
    ],
    name: 'memoryNodesOfMemoryTree',
    outputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'memoryTreeId',
            type: 'uint256',
          },
          {
            internalType: 'uint256[]',
            name: 'children',
            type: 'uint256[]',
          },
          {
            internalType: 'string',
            name: 'storageURI',
            type: 'string',
          },
        ],
        internalType: 'struct IMemoryTree.MemoryNode[]',
        name: 'treeNodes',
        type: 'tuple[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'brainAddress',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'brainId',
        type: 'uint256',
      },
    ],
    name: 'memoryTreesOfBrain',
    outputs: [
      {
        internalType: 'uint256[]',
        name: 'indexes',
        type: 'uint256[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'signer',
        type: 'address',
      },
    ],
    name: 'setSigner',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes4',
        name: 'interfaceId',
        type: 'bytes4',
      },
    ],
    name: 'supportsInterface',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
] as const

const _bytecode =
  '0x608060405234801561001057600080fd5b5061001a33610031565b600180546001600160a01b03191633179055610081565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6119f2806100906000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80638da5cb5b1161008c578063d963581611610066578063d9635816146101d8578063dc5c4dca146101eb578063ebd7c1681461020b578063f2fde38b1461022b57600080fd5b80638da5cb5b1461017f578063910f031c1461019057806399816c4c146101b857600080fd5b806301ffc9a7146100d4578063445efb59146100fc5780636c19e7831461011d5780636f82ba2714610132578063715018a6146101525780637ac3c02f1461015a575b600080fd5b6100e76100e23660046112ff565b61023e565b60405190151581526020015b60405180910390f35b61010f61010a366004611415565b610275565b6040519081526020016100f3565b61013061012b3660046114a8565b6103dd565b005b6101456101403660046114c5565b610407565b6040516100f39190611519565b6101306104a9565b6001546001600160a01b03165b6040516001600160a01b0390911681526020016100f3565b6000546001600160a01b0316610167565b6101a361019e366004611558565b6104bd565b604080519283526020830191909152016100f3565b6101cb6101c63660046115e8565b6106d5565b6040516100f39190611614565b6101cb6101e63660046114c5565b610823565b6101fe6101f93660046114c5565b610a40565b6040516100f391906116e9565b61021e6102193660046114c5565b610c2f565b6040516100f3919061174b565b6101306102393660046114a8565b610d58565b60006001600160e01b0319821663151c454160e11b148061026f57506301ffc9a760e01b6001600160e01b03198316145b92915050565b600085858560405160200161028c9392919061175e565b60408051601f198184030181526020601f8601819004810284018101909252848352919085908590819084018382808284376000920182905250855160208701209093506102e792508491506102e190610dd6565b90610e29565b6001549091506001600160a01b0380831691161461031857604051638baa579f60e01b815260040160405180910390fd5b60008981526005602090815260408083208054845260049092529091208054600182015461034f916001600160a01b031690610e4d565b815461035b908a610f20565b81546001830154604080516001600160a01b03909316835260208301919091528101829052606081018c90529096507f7b06466216d59eef8c3e9af46549eecf860e594162c5c7f7cc96995beea938a79060800160405180910390a1506001908101805491820181556000908152602090200184905550505095945050505050565b6103e5610fa2565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b60408051606080820183526000808352602080840182905283850183905285825260048152908490208451928301855280546001600160a01b03168352600181015483830152600281018054865181850281018501885281815295969495929486019383018282801561049957602002820191906000526020600020905b815481526020019060010190808311610485575b5050505050815250509050919050565b6104b1610fa2565b6104bb6000610ffc565b565b600080878787876040516020016104d7949392919061178b565b60408051601f198184030181526020601f87018190048102840181019092528583529190869086908190840183828082843760009201829052508551602087012090935061052c92508491506102e190610dd6565b6001549091506001600160a01b0380831691161461055d57604051638baa579f60e01b815260040160405180910390fd5b6105678b8b610e4d565b6040805160018082528183019092526000916020808301908036833701905050905060405180606001604052808d6001600160a01b031681526020018c81526020018281525060046000600254815260200190815260200160002060008201518160000160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060208201518160010155604082015181600201908051906020019061061592919061129f565b509050506106256002548a610f20565b604080516001600160a01b038f168152602081018e9052908101829052606081018c90529095507f7b06466216d59eef8c3e9af46549eecf860e594162c5c7f7cc96995beea938a79060800160405180910390a1846004600060025481526020019081526020016000206002016000815481106106a4576106a46117d1565b600091825260208220019190915560028054916106c0836117e7565b91905055955050505050965096945050505050565b606060025467ffffffffffffffff8111156106f2576106f2611330565b60405190808252806020026020018201604052801561071b578160200160208202803683370190505b5090506000805b60025481101561081a576000818152600460209081526040808320815160608101835281546001600160a01b031681526001820154818501526002820180548451818702810187018652818152929593948601938301828280156107a557602002820191906000526020600020905b815481526020019060010190808311610791575b5050505050815250509050856001600160a01b031681600001516001600160a01b03161480156107d85750848160200151145b1561080757818484815181106107f0576107f06117d1565b6020908102919091010152610804836117e7565b92505b5080610812816117e7565b915050610722565b50815292915050565b606060035467ffffffffffffffff81111561084057610840611330565b604051908082528060200260200182016040528015610869578160200160208202803683370190505b50600083815260046020908152604080832060020180548251818502810185019093528083529495509293849391928301828280156108c757602002820191906000526020600020905b8154815260200190600101908083116108b3575b5050505050905060005b815181101561092e578181815181106108ec576108ec6117d1565b6020026020010151848481518110610906576109066117d1565b602090810291909101015261091a836117e7565b925080610926816117e7565b9150506108d1565b5060005b82811015610a3757600060056000868481518110610952576109526117d1565b6020026020010151815260200190815260200160002090506000816001018054806020026020016040519081016040528092919081815260200182805480156109ba57602002820191906000526020600020905b8154815260200190600101908083116109a6575b5050505050905060005b8151811015610a21578181815181106109df576109df6117d1565b60200260200101518787815181106109f9576109f96117d1565b6020908102919091010152610a0d866117e7565b955080610a19816117e7565b9150506109c4565b5050508080610a2f906117e7565b915050610932565b50508152919050565b60606000610a4d83610823565b9050805167ffffffffffffffff811115610a6957610a69611330565b604051908082528060200260200182016040528015610abe57816020015b610aab60405180606001604052806000815260200160608152602001606081525090565b815260200190600190039081610a875790505b50915060005b8151811015610c285760056000838381518110610ae357610ae36117d1565b602002602001015181526020019081526020016000206040518060600160405290816000820154815260200160018201805480602002602001604051908101604052809291908181526020018280548015610b5d57602002820191906000526020600020905b815481526020019060010190808311610b49575b50505050508152602001600282018054610b769061180e565b80601f0160208091040260200160405190810160405280929190818152602001828054610ba29061180e565b8015610bef5780601f10610bc457610100808354040283529160200191610bef565b820191906000526020600020905b815481529060010190602001808311610bd257829003601f168201915b505050505081525050838281518110610c0a57610c0a6117d1565b60200260200101819052508080610c20906117e7565b915050610ac4565b5050919050565b610c5360405180606001604052806000815260200160608152602001606081525090565b60008281526005602090815260409182902082516060810184528154815260018201805485518186028101860190965280865291949293858101939290830182828015610cbf57602002820191906000526020600020905b815481526020019060010190808311610cab575b50505050508152602001600282018054610cd89061180e565b80601f0160208091040260200160405190810160405280929190818152602001828054610d049061180e565b80156104995780601f10610d2657610100808354040283529160200191610499565b820191906000526020600020905b815481529060010190602001808311610d3457505050919092525091949350505050565b610d60610fa2565b6001600160a01b038116610dca5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b610dd381610ffc565b50565b6040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101829052600090605c01604051602081830303815290604052805190602001209050919050565b6000806000610e38858561104c565b91509150610e4581611091565b509392505050565b6040516331a9108f60e11b8152600481018290526000906001600160a01b03841690636352211e90602401602060405180830381865afa158015610e95573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eb99190611848565b9050336001600160a01b03821614610f1b57604080518082018252601781527f4d7573742062652063616c6c6564206279206f776e65720000000000000000006020820152905163b4f0c18560e01b8152610dc1919083903390600401611865565b505050565b60035460408051606081018252848152815160008082526020808301855280840192835283850187905285825260058152939020825181559051805192939192610f70926001850192019061129f565b5060408201516002820190610f8590826118e6565b50905050600360008154610f98906117e7565b9091555092915050565b6000546001600160a01b031633146104bb5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610dc1565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60008082516041036110825760208301516040840151606085015160001a611076878285856111db565b9450945050505061108a565b506000905060025b9250929050565b60008160048111156110a5576110a56119a6565b036110ad5750565b60018160048111156110c1576110c16119a6565b0361110e5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401610dc1565b6002816004811115611122576111226119a6565b0361116f5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610dc1565b6003816004811115611183576111836119a6565b03610dd35760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610dc1565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311156112125750600090506003611296565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015611266573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811661128f57600060019250925050611296565b9150600090505b94509492505050565b8280548282559060005260206000209081019282156112da579160200282015b828111156112da5782518255916020019190600101906112bf565b506112e69291506112ea565b5090565b5b808211156112e657600081556001016112eb565b60006020828403121561131157600080fd5b81356001600160e01b03198116811461132957600080fd5b9392505050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261135757600080fd5b813567ffffffffffffffff8082111561137257611372611330565b604051601f8301601f19908116603f0116810190828211818310171561139a5761139a611330565b816040528381528660208588010111156113b357600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008083601f8401126113e557600080fd5b50813567ffffffffffffffff8111156113fd57600080fd5b60208301915083602082850101111561108a57600080fd5b60008060008060006080868803121561142d57600080fd5b8535945060208601359350604086013567ffffffffffffffff8082111561145357600080fd5b61145f89838a01611346565b9450606088013591508082111561147557600080fd5b50611482888289016113d3565b969995985093965092949392505050565b6001600160a01b0381168114610dd357600080fd5b6000602082840312156114ba57600080fd5b813561132981611493565b6000602082840312156114d757600080fd5b5035919050565b600081518084526020808501945080840160005b8381101561150e578151875295820195908201906001016114f2565b509495945050505050565b6020815260018060a01b038251166020820152602082015160408201526000604083015160608084015261155060808401826114de565b949350505050565b60008060008060008060a0878903121561157157600080fd5b863561157c81611493565b95506020870135945060408701359350606087013567ffffffffffffffff808211156115a757600080fd5b6115b38a838b01611346565b945060808901359150808211156115c957600080fd5b506115d689828a016113d3565b979a9699509497509295939492505050565b600080604083850312156115fb57600080fd5b823561160681611493565b946020939093013593505050565b6020808252825182820181905260009190848201906040850190845b8181101561164c57835183529284019291840191600101611630565b50909695505050505050565b60005b8381101561167357818101518382015260200161165b565b50506000910152565b60008151808452611694816020860160208601611658565b601f01601f19169290920160200192915050565b8051825260006020820151606060208501526116c760608501826114de565b9050604083015184820360408601526116e0828261167c565b95945050505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561173e57603f1988860301845261172c8583516116a8565b94509285019290850190600101611710565b5092979650505050505050565b60208152600061132960208301846116a8565b8381528260208201526000825161177c816040850160208701611658565b91909101604001949350505050565b6bffffffffffffffffffffffff198560601b168152836014820152826034820152600082516117c1816054850160208701611658565b9190910160540195945050505050565b634e487b7160e01b600052603260045260246000fd5b60006001820161180757634e487b7160e01b600052601160045260246000fd5b5060010190565b600181811c9082168061182257607f821691505b60208210810361184257634e487b7160e01b600052602260045260246000fd5b50919050565b60006020828403121561185a57600080fd5b815161132981611493565b606081526000611878606083018661167c565b6001600160a01b0394851660208401529290931660409091015292915050565b601f821115610f1b57600081815260208120601f850160051c810160208610156118bf5750805b601f850160051c820191505b818110156118de578281556001016118cb565b505050505050565b815167ffffffffffffffff81111561190057611900611330565b6119148161190e845461180e565b84611898565b602080601f83116001811461194957600084156119315750858301515b600019600386901b1c1916600185901b1785556118de565b600085815260208120601f198616915b8281101561197857888601518255948401946001909101908401611959565b50858210156119965787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052602160045260246000fdfea2646970667358221220a05d3f6f7d1bcbb661b559a687cbadc0660c3c215d2469607c3962bb2b652f3d64736f6c63430008110033'

type MemoryTreeEnumerableConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>

const isSuperArgs = (
  xs: MemoryTreeEnumerableConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1

export class MemoryTreeEnumerable__factory extends ContractFactory {
  constructor(...args: MemoryTreeEnumerableConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args)
    } else {
      super(_abi, _bytecode, args[0])
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> },
  ): Promise<MemoryTreeEnumerable> {
    return super.deploy(overrides || {}) as Promise<MemoryTreeEnumerable>
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {})
  }
  override attach(address: string): MemoryTreeEnumerable {
    return super.attach(address) as MemoryTreeEnumerable
  }
  override connect(signer: Signer): MemoryTreeEnumerable__factory {
    return super.connect(signer) as MemoryTreeEnumerable__factory
  }

  static readonly bytecode = _bytecode
  static readonly abi = _abi
  static createInterface(): MemoryTreeEnumerableInterface {
    return new utils.Interface(_abi) as MemoryTreeEnumerableInterface
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider,
  ): MemoryTreeEnumerable {
    return new Contract(address, _abi, signerOrProvider) as MemoryTreeEnumerable
  }
}
