/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers'
import type { Provider, TransactionRequest } from '@ethersproject/providers'
import type { PromiseOrValue } from '../../../../../common'
import type {
  ComputeManagerSimple,
  ComputeManagerSimpleInterface,
} from '../../../../../lib/protocol-core/contracts/samples/ComputeManagerSimple'

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: 'computeRequestManager_',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'ASTOPaymentFailed',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: 'errMsg',
        type: 'string',
      },
    ],
    name: 'AccessError',
    type: 'error',
  },
  {
    inputs: [],
    name: 'ComputeInactive',
    type: 'error',
  },
  {
    inputs: [],
    name: 'ComputeRequestClosed',
    type: 'error',
  },
  {
    inputs: [],
    name: 'ComputeRequestRevoked',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint64',
        name: 'slaTimestamp',
        type: 'uint64',
      },
      {
        internalType: 'uint64',
        name: 'currentTimestamp',
        type: 'uint64',
      },
    ],
    name: 'ComputeSLANotReached',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: 'errMsg',
        type: 'string',
      },
      {
        internalType: 'uint256',
        name: 'availableAmount',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'requestedAmount',
        type: 'uint256',
      },
    ],
    name: 'InsufficientBalance',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: 'errMsg',
        type: 'string',
      },
      {
        internalType: 'address',
        name: 'expectedCaller',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'actualCaller',
        type: 'address',
      },
    ],
    name: 'InvalidCaller',
    type: 'error',
  },
  {
    inputs: [],
    name: 'InvalidComputeIndex',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: 'errMsg',
        type: 'string',
      },
      {
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
    ],
    name: 'InvalidComputeRequest',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: 'errMsg',
        type: 'string',
      },
    ],
    name: 'InvalidDisbursement',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: 'errMsg',
        type: 'string',
      },
    ],
    name: 'InvalidInput',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'index',
        type: 'uint256',
      },
    ],
    name: 'InvalidRegistryIndex',
    type: 'error',
  },
  {
    inputs: [],
    name: 'InvalidSignature',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: 'errMsg',
        type: 'string',
      },
      {
        internalType: 'uint256',
        name: 'requiredAmount',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'receivedAmount',
        type: 'uint256',
      },
    ],
    name: 'PaymentError',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'unitCost',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'unitMinutes',
        type: 'uint256',
      },
    ],
    name: 'addComputeOption',
    outputs: [
      {
        internalType: 'uint256',
        name: 'index',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'claimAsto',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'computeId',
        type: 'uint256',
      },
    ],
    name: 'completeCompute',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    name: 'computeOptions',
    outputs: [
      {
        internalType: 'bool',
        name: 'enabled',
        type: 'bool',
      },
      {
        internalType: 'uint256',
        name: 'unitCost',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'unitSeconds',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'computeRequestManager',
    outputs: [
      {
        internalType: 'contract IComputeRequestManager',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'index',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'getComputeOptionDisbursement',
    outputs: [
      {
        internalType: 'address[]',
        name: 'addresses',
        type: 'address[]',
      },
      {
        internalType: 'uint256[]',
        name: 'amounts',
        type: 'uint256[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'index',
        type: 'uint256',
      },
      {
        internalType: 'uint64',
        name: 'startTime',
        type: 'uint64',
      },
      {
        internalType: 'uint64',
        name: 'units',
        type: 'uint64',
      },
    ],
    name: 'getComputeOptionSLA',
    outputs: [
      {
        internalType: 'uint64',
        name: 'maxTime',
        type: 'uint64',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'index',
        type: 'uint256',
      },
      {
        internalType: 'uint64',
        name: 'units',
        type: 'uint64',
      },
    ],
    name: 'getComputeOptionUnitCost',
    outputs: [
      {
        internalType: 'uint256',
        name: 'cost',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes4',
        name: 'interfaceId',
        type: 'bytes4',
      },
    ],
    name: 'supportsInterface',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'totalComputeOptions',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'computeId',
        type: 'uint256',
      },
      {
        internalType: 'bool',
        name: 'active',
        type: 'bool',
      },
      {
        internalType: 'uint256',
        name: 'unitCost',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'unitMinutes',
        type: 'uint256',
      },
    ],
    name: 'updateComputeOption',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
] as const

const _bytecode =
  '0x60a060405234801561001057600080fd5b50604051610b6b380380610b6b83398101604081905261002f91610099565b61003833610049565b6001600160a01b03166080526100c9565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100ab57600080fd5b81516001600160a01b03811681146100c257600080fd5b9392505050565b608051610a796100f2600039600081816102390152818161049b01526105af0152610a796000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063830d3f471161008c578063d7b69cb311610066578063d7b69cb314610234578063eae5b6281461025b578063f2fde38b1461026e578063f7c925a01461028157600080fd5b8063830d3f47146101e95780638da5cb5b146101fc578063ae5a57cf1461022157600080fd5b80631bc278b5116100c85780631bc278b5146101895780631ec58b47146101b5578063715018a6146101d65780637c414b87146101e057600080fd5b806301ffc9a7146100ef5780630933d6b7146101175780630c34bfe714610168575b600080fd5b6101026100fd366004610787565b610294565b60405190151581526020015b60405180910390f35b61014b6101253660046107b8565b600160208190526000918252604090912080549181015460029091015460ff9092169183565b60408051931515845260208401929092529082015260600161010e565b61017b6101763660046107ee565b6102cb565b60405190815260200161010e565b61019c61019736600461081a565b610351565b60405167ffffffffffffffff909116815260200161010e565b6101c86101c3366004610856565b6103a6565b60405161010e929190610878565b6101de610469565b005b61017b60025481565b6101de6101f73660046107b8565b61047d565b6000546001600160a01b03165b6040516001600160a01b03909116815260200161010e565b61017b61022f366004610856565b610503565b6102097f000000000000000000000000000000000000000000000000000000000000000081565b6101de610269366004610913565b610581565b6101de61027c36600461093d565b61060f565b6101de61028f366004610958565b61068a565b60006001600160e01b0319821663046642d960e11b14806102c557506301ffc9a760e01b6001600160e01b03198316145b92915050565b60008260025481106102f057604051632ac2971f60e21b815260040160405180910390fd5b60008481526001602052604090205460ff1661031f576040516303d42cfb60e01b815260040160405180910390fd5b600084815260016020819052604090912001546103479067ffffffffffffffff8516906109b0565b91505b5092915050565b600083600254811061037657604051632ac2971f60e21b815260040160405180910390fd5b6000858152600160205260409020600201546103939084906109c7565b61039d90856109f3565b95945050505050565b6060808360025481106103cc57604051632ac2971f60e21b815260040160405180910390fd5b60408051600180825281830190925290602080830190803683375050600054919450506001600160a01b03168360008151811061040b5761040b610a14565b6001600160a01b0392909216602092830291909101820152604080516001808252818301909252918281019080368337019050509150838260008151811061045557610455610a14565b602002602001018181525050509250929050565b6104716106dd565b61047b6000610737565b565b6104856106dd565b60405163830d3f4760e01b8152600481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063830d3f4790602401600060405180830381600087803b1580156104e757600080fd5b505af11580156104fb573d6000803e3d6000fd5b505050505b50565b600061050d6106dd565b60408051606081018252600181526020810185905290810161053084603c6109b0565b90526002805460009081526001602081815260408084208651815460ff191690151517815591860151928201929092559301519282019290925580549161057683610a2a565b909155509392505050565b6105896106dd565b604051631d5cb6c560e31b81526001600160a01b038381166004830152602482018390527f0000000000000000000000000000000000000000000000000000000000000000169063eae5b62890604401600060405180830381600087803b1580156105f357600080fd5b505af1158015610607573d6000803e3d6000fd5b505050505050565b6106176106dd565b6001600160a01b0381166106815760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b61050081610737565b6106926106dd565b6040805160608101825293151584526020808501938452848201928352600095865260019081905294209251835460ff19169015151783559051928201929092559051600290910155565b6000546001600160a01b0316331461047b5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610678565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561079957600080fd5b81356001600160e01b0319811681146107b157600080fd5b9392505050565b6000602082840312156107ca57600080fd5b5035919050565b803567ffffffffffffffff811681146107e957600080fd5b919050565b6000806040838503121561080157600080fd5b82359150610811602084016107d1565b90509250929050565b60008060006060848603121561082f57600080fd5b8335925061083f602085016107d1565b915061084d604085016107d1565b90509250925092565b6000806040838503121561086957600080fd5b50508035926020909101359150565b604080825283519082018190526000906020906060840190828701845b828110156108ba5781516001600160a01b031684529284019290840190600101610895565b5050508381038285015284518082528583019183019060005b818110156108ef578351835292840192918401916001016108d3565b5090979650505050505050565b80356001600160a01b03811681146107e957600080fd5b6000806040838503121561092657600080fd5b61092f836108fc565b946020939093013593505050565b60006020828403121561094f57600080fd5b6107b1826108fc565b6000806000806080858703121561096e57600080fd5b843593506020850135801515811461098557600080fd5b93969395505050506040820135916060013590565b634e487b7160e01b600052601160045260246000fd5b80820281158282048414176102c5576102c561099a565b67ffffffffffffffff8181168382160280821691908281146109eb576109eb61099a565b505092915050565b67ffffffffffffffff81811683821601908082111561034a5761034a61099a565b634e487b7160e01b600052603260045260246000fd5b600060018201610a3c57610a3c61099a565b506001019056fea2646970667358221220915e219991b4bcb7fc7d958bead5ccd9f345404a29a7a3963dc9e5f475e3068d64736f6c63430008110033'

type ComputeManagerSimpleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>

const isSuperArgs = (
  xs: ComputeManagerSimpleConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1

export class ComputeManagerSimple__factory extends ContractFactory {
  constructor(...args: ComputeManagerSimpleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args)
    } else {
      super(_abi, _bytecode, args[0])
    }
  }

  override deploy(
    computeRequestManager_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> },
  ): Promise<ComputeManagerSimple> {
    return super.deploy(
      computeRequestManager_,
      overrides || {},
    ) as Promise<ComputeManagerSimple>
  }
  override getDeployTransaction(
    computeRequestManager_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(computeRequestManager_, overrides || {})
  }
  override attach(address: string): ComputeManagerSimple {
    return super.attach(address) as ComputeManagerSimple
  }
  override connect(signer: Signer): ComputeManagerSimple__factory {
    return super.connect(signer) as ComputeManagerSimple__factory
  }

  static readonly bytecode = _bytecode
  static readonly abi = _abi
  static createInterface(): ComputeManagerSimpleInterface {
    return new utils.Interface(_abi) as ComputeManagerSimpleInterface
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider,
  ): ComputeManagerSimple {
    return new Contract(address, _abi, signerOrProvider) as ComputeManagerSimple
  }
}
