/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IComputeRequestManager,
  IComputeRequestManagerInterface,
} from "../../../../../lib/protocol-core/contracts/interfaces/IComputeRequestManager";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "AccountBalanceCorrected",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "requester",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "computeManager",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "computeId",
        type: "uint256",
      },
    ],
    name: "ComputeCompleted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "requester",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "computeManager",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "optionId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "computeId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "computeUnits",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "computeHash",
        type: "bytes32",
      },
    ],
    name: "ComputeRequested",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "requester",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "computeManager",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "computeId",
        type: "uint256",
      },
    ],
    name: "ComputeRevoked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "minimumFee",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint24",
        name: "percentageFee",
        type: "uint24",
      },
    ],
    name: "DaoFeeUpdated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "claimAsto",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "computeId",
        type: "uint256",
      },
    ],
    name: "completeCompute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "computeManager",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "optionId",
        type: "uint256",
      },
      {
        internalType: "uint64",
        name: "units",
        type: "uint64",
      },
      {
        internalType: "bytes32",
        name: "computeHash",
        type: "bytes32",
      },
    ],
    name: "requestCompute",
    outputs: [
      {
        internalType: "uint256",
        name: "computeId",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "computeId",
        type: "uint256",
      },
    ],
    name: "revokeCompute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "stakeAsto",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IComputeRequestManager__factory {
  static readonly abi = _abi;
  static createInterface(): IComputeRequestManagerInterface {
    return new utils.Interface(_abi) as IComputeRequestManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IComputeRequestManager {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as IComputeRequestManager;
  }
}
