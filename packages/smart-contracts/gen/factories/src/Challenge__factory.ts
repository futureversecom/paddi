/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from 'ethers'
import type { Provider, TransactionRequest } from '@ethersproject/providers'
import type { PromiseOrValue } from '../../common'
import type { Challenge, ChallengeInterface } from '../../src/Challenge'

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: 'asto',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'signer_',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'feeAddress_',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'feeBasis_',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [],
    name: 'InvalidCaller',
    type: 'error',
  },
  {
    inputs: [],
    name: 'InvalidContestState',
    type: 'error',
  },
  {
    inputs: [],
    name: 'InvalidParams',
    type: 'error',
  },
  {
    inputs: [],
    name: 'InvalidSignature',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'PaymentFailed',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'initiator',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'acceptor',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'potHalf',
        type: 'uint256',
      },
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'contestHash',
        type: 'bytes32',
      },
    ],
    name: 'ContestAccepted',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'winner',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'loser',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'winnings',
        type: 'uint256',
      },
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'contestHash',
        type: 'bytes32',
      },
    ],
    name: 'ContestClosed',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'initiator',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'acceptor',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'potHalf',
        type: 'uint256',
      },
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'contestHash',
        type: 'bytes32',
      },
    ],
    name: 'ContestOpened',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'initiator',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'contestHash',
        type: 'bytes32',
      },
    ],
    name: 'ContestRevoked',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    inputs: [],
    name: 'ASTO',
    outputs: [
      {
        internalType: 'contract IERC20',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: '_signer',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'contestHash',
        type: 'bytes32',
      },
    ],
    name: 'acceptContest',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'winner',
        type: 'address',
      },
      {
        internalType: 'bytes32',
        name: 'contestHash',
        type: 'bytes32',
      },
      {
        internalType: 'bytes',
        name: 'signature',
        type: 'bytes',
      },
    ],
    name: 'closeContest',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    name: 'contests',
    outputs: [
      {
        internalType: 'enum ContestState',
        name: 'state',
        type: 'uint8',
      },
      {
        internalType: 'address',
        name: 'initiator',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'acceptor',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'potHalf',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'feeAddress',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'feeBasis',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'contestHash',
        type: 'bytes32',
      },
    ],
    name: 'getContest',
    outputs: [
      {
        components: [
          {
            internalType: 'enum ContestState',
            name: 'state',
            type: 'uint8',
          },
          {
            internalType: 'address',
            name: 'initiator',
            type: 'address',
          },
          {
            internalType: 'address',
            name: 'acceptor',
            type: 'address',
          },
          {
            internalType: 'uint256',
            name: 'potHalf',
            type: 'uint256',
          },
        ],
        internalType: 'struct Contest',
        name: 'contest',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'acceptor',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'potHalf',
        type: 'uint256',
      },
      {
        internalType: 'bytes32',
        name: 'contestHash',
        type: 'bytes32',
      },
      {
        internalType: 'bytes',
        name: 'signature',
        type: 'bytes',
      },
    ],
    name: 'openContest',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'contestHash',
        type: 'bytes32',
      },
    ],
    name: 'revokeContest',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'feeAddress_',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'feeBasis_',
        type: 'uint256',
      },
    ],
    name: 'setFeeDetails',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'signer_',
        type: 'address',
      },
    ],
    name: 'setSigner',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
] as const

const _bytecode =
  '0x60a06040523480156200001157600080fd5b50604051620014ec380380620014ec8339810160408190526200003491620000e6565b6200003f3362000079565b6001600160a01b03938416608052600180549385166001600160a01b03199485161790556003556002805491909316911617905562000138565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b0381168114620000e157600080fd5b919050565b60008060008060808587031215620000fd57600080fd5b6200010885620000c9565b93506200011860208601620000c9565b92506200012860408601620000c9565b6060959095015193969295505050565b60805161137c62000170600039600081816101d3015281816106860152818161093f015281816109d80152610c78015261137c6000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c80638da5cb5b11610097578063ea269c8411610066578063ea269c84146101f5578063f22d36a214610249578063f2fde38b14610269578063fe644b8f1461027c57600080fd5b80638da5cb5b14610197578063bda9b9c9146101a8578063ca29e8c8146101bb578063d7d15482146101ce57600080fd5b806341275358116100d357806341275358146101355780635a94ee46146101655780636c19e7831461017c578063715018a61461018f57600080fd5b8063291f1f1c146100fa5780633180ea911461010f57806337ba3cc814610122575b600080fd5b61010d610108366004611077565b61028f565b005b61010d61011d3660046110df565b610495565b61010d6101303660046110df565b6105e6565b600254610148906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b61016e60035481565b60405190815260200161015c565b61010d61018a3660046110f8565b610744565b61010d61076e565b6000546001600160a01b0316610148565b61010d6101b636600461111a565b610782565b600154610148906001600160a01b031681565b6101487f000000000000000000000000000000000000000000000000000000000000000081565b6102396102033660046110df565b60046020526000908152604090208054600182015460029092015460ff8216926001600160a01b03610100909304831692169084565b60405161015c94939291906111ac565b61025c6102573660046110df565b610a9e565b60405161015c91906111e1565b61010d6102773660046110f8565b610b3a565b61010d61028a366004611226565b610bb8565b600033846040516020016102a593929190611250565b60408051601f198184030181526020601f85018190048102840181019092528383529190849084908190840183828082843760009201829052508551602087012090935061030092508491506102fa90610be5565b90610c38565b6001549091506001600160a01b0380831691161461033157604051638baa579f60e01b815260040160405180910390fd5b336001600160a01b03891681900361035c576040516348f5c3ed60e01b815260040160405180910390fd5b60008781526004602052604090205461010090046001600160a01b0316156103975760405163d613ecd560e01b815260040160405180910390fd5b6103a18189610c5e565b6040805160808101825260008082526001600160a01b03848116602080850191909152908d1683850152606083018c90528a8252600490529190912081518154829060ff191660018360038111156103fb576103fb611174565b021790555060208201518154610100600160a81b0319166101006001600160a01b03928316021782556040808401516001840180546001600160a01b03191691909316179091556060909201516002909101555187907f4d46cefe3d0b3184acfacf0513bcaaafe6e2ff930302d70806c5c304727caf9f906104829084908d908d9061129e565b60405180910390a2505050505050505050565b600081815260046020526040812090815460ff1660038111156104ba576104ba611174565b146104d85760405163d613ecd560e01b815260040160405180910390fd5b8054339061010090046001600160a01b031681900361050a576040516348f5c3ed60e01b815260040160405180910390fd5b60018201546001600160a01b031661053e576001820180546001600160a01b0319166001600160a01b03831617905561056e565b60018201546001600160a01b0382811691161461056e576040516348f5c3ed60e01b815260040160405180910390fd5b61057c818360020154610c5e565b815460ff1916600190811780845590830154600284015460405186937f8eda059bb4fe0c644119f83f73612a862511effe0166757d021846a33bc0945d936105d9936001600160a01b03610100909304831693929091169161129e565b60405180910390a2505050565b600081815260046020526040812090815460ff16600381111561060b5761060b611174565b146106295760405163d613ecd560e01b815260040160405180910390fd5b8054339061010090046001600160a01b0316811461065a576040516348f5c3ed60e01b815260040160405180910390fd5b600282015460405163a9059cbb60e01b81526001600160a01b03838116600483015260248201929092527f00000000000000000000000000000000000000000000000000000000000000009091169063a9059cbb906044016020604051808303816000875af11580156106d1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106f591906112c2565b508154600360ff19909116178083556040516101009091046001600160a01b0316815283907f097e6e2df26a009d24acf69cbcecc9bd4cb9970d1f3d1f6feff1373d5f0b2621906020016105d9565b61074c610d1c565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b610776610d1c565b6107806000610d76565b565b6002848460405160200161079893929190611250565b60408051601f198184030181526020601f8501819004810284018101909252838352919084908490819084018382808284376000920182905250855160208701209093506107ed92508491506102fa90610be5565b6001549091506001600160a01b0380831691161461081e57604051638baa579f60e01b815260040160405180910390fd5b60008681526004602052604090206001815460ff16600381111561084457610844611174565b146108625760405163d613ecd560e01b815260040160405180910390fd5b80546000906001600160a01b03808b166101009092041603610892575060018101546001600160a01b03166108d8565b60018201546001600160a01b03808b169116036108bf5750805461010090046001600160a01b03166108d8565b604051635435b28960e11b815260040160405180910390fd5b6000826002015460026108eb91906112fa565b905060006127106003548361090091906112fa565b61090a9190611311565b90506109168183611333565b60405163a9059cbb60e01b81526001600160a01b038d81166004830152602482018390529193507f00000000000000000000000000000000000000000000000000000000000000009091169063a9059cbb906044016020604051808303816000875af115801561098a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109ae91906112c2565b5060025460405163a9059cbb60e01b81526001600160a01b039182166004820152602481018390527f00000000000000000000000000000000000000000000000000000000000000009091169063a9059cbb906044016020604051808303816000875af1158015610a23573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a4791906112c2565b50835460ff191660021784556040518a907f326fcca634f6f18be17f8541b4cc108efaa64c7459a3ac23da7ba6add784605190610a89908e908790879061129e565b60405180910390a25050505050505050505050565b604080516080810182526000808252602082018190529181018290526060810191909152600082815260046020526040908190208151608081019092528054829060ff166003811115610af357610af3611174565b6003811115610b0457610b04611174565b815281546001600160a01b0361010090910481166020830152600183015416604082015260029091015460609091015292915050565b610b42610d1c565b6001600160a01b038116610bac5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b610bb581610d76565b50565b610bc0610d1c565b600355600280546001600160a01b0319166001600160a01b0392909216919091179055565b6040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101829052600090605c01604051602081830303815290604052805190602001209050919050565b6000806000610c478585610dc6565b91509150610c5481610e0b565b5090505b92915050565b6040516323b872dd60e01b81526000906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906323b872dd90610cb19086903090879060040161129e565b6020604051808303816000875af1158015610cd0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cf491906112c2565b905080610d1757604051631e67017f60e01b815260048101839052602401610ba3565b505050565b6000546001600160a01b031633146107805760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610ba3565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000808251604103610dfc5760208301516040840151606085015160001a610df087828585610f55565b94509450505050610e04565b506000905060025b9250929050565b6000816004811115610e1f57610e1f611174565b03610e275750565b6001816004811115610e3b57610e3b611174565b03610e885760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401610ba3565b6002816004811115610e9c57610e9c611174565b03610ee95760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610ba3565b6003816004811115610efd57610efd611174565b03610bb55760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610ba3565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115610f8c5750600090506003611010565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015610fe0573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811661100957600060019250925050611010565b9150600090505b94509492505050565b80356001600160a01b038116811461103057600080fd5b919050565b60008083601f84011261104757600080fd5b50813567ffffffffffffffff81111561105f57600080fd5b602083019150836020828501011115610e0457600080fd5b60008060008060006080868803121561108f57600080fd5b61109886611019565b94506020860135935060408601359250606086013567ffffffffffffffff8111156110c257600080fd5b6110ce88828901611035565b969995985093965092949392505050565b6000602082840312156110f157600080fd5b5035919050565b60006020828403121561110a57600080fd5b61111382611019565b9392505050565b6000806000806060858703121561113057600080fd5b61113985611019565b935060208501359250604085013567ffffffffffffffff81111561115c57600080fd5b61116887828801611035565b95989497509550505050565b634e487b7160e01b600052602160045260246000fd5b600481106111a857634e487b7160e01b600052602160045260246000fd5b9052565b608081016111ba828761118a565b6001600160a01b039485166020830152929093166040840152606090920191909152919050565b60006080820190506111f482845161118a565b602083015160018060a01b03808216602085015280604086015116604085015250506060830151606083015292915050565b6000806040838503121561123957600080fd5b61124283611019565b946020939093013593505050565b60006004851061127057634e487b7160e01b600052602160045260246000fd5b5060f89390931b835260609190911b6bffffffffffffffffffffffff19166001830152601582015260350190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6000602082840312156112d457600080fd5b8151801515811461111357600080fd5b634e487b7160e01b600052601160045260246000fd5b8082028115828204841417610c5857610c586112e4565b60008261132e57634e487b7160e01b600052601260045260246000fd5b500490565b81810381811115610c5857610c586112e456fea26469706673582212208602144ebab59b6964b136c1d4575dedd8e4f655f80fb97a1367cbf9274eb97264736f6c63430008110033'

type ChallengeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>

const isSuperArgs = (
  xs: ChallengeConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1

export class Challenge__factory extends ContractFactory {
  constructor(...args: ChallengeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args)
    } else {
      super(_abi, _bytecode, args[0])
    }
  }

  override deploy(
    asto: PromiseOrValue<string>,
    signer_: PromiseOrValue<string>,
    feeAddress_: PromiseOrValue<string>,
    feeBasis_: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> },
  ): Promise<Challenge> {
    return super.deploy(
      asto,
      signer_,
      feeAddress_,
      feeBasis_,
      overrides || {},
    ) as Promise<Challenge>
  }
  override getDeployTransaction(
    asto: PromiseOrValue<string>,
    signer_: PromiseOrValue<string>,
    feeAddress_: PromiseOrValue<string>,
    feeBasis_: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(
      asto,
      signer_,
      feeAddress_,
      feeBasis_,
      overrides || {},
    )
  }
  override attach(address: string): Challenge {
    return super.attach(address) as Challenge
  }
  override connect(signer: Signer): Challenge__factory {
    return super.connect(signer) as Challenge__factory
  }

  static readonly bytecode = _bytecode
  static readonly abi = _abi
  static createInterface(): ChallengeInterface {
    return new utils.Interface(_abi) as ChallengeInterface
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider,
  ): Challenge {
    return new Contract(address, _abi, signerOrProvider) as Challenge
  }
}
