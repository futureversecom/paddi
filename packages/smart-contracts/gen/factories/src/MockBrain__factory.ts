/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers'
import type { Provider, TransactionRequest } from '@ethersproject/providers'
import type { PromiseOrValue } from '../../common'
import type { MockBrain, MockBrainInterface } from '../../src/MockBrain'

const _abi = [
  {
    inputs: [],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [],
    name: 'ApprovalCallerNotOwnerNorApproved',
    type: 'error',
  },
  {
    inputs: [],
    name: 'ApprovalQueryForNonexistentToken',
    type: 'error',
  },
  {
    inputs: [],
    name: 'BalanceQueryForZeroAddress',
    type: 'error',
  },
  {
    inputs: [],
    name: 'InvalidQueryRange',
    type: 'error',
  },
  {
    inputs: [],
    name: 'MintERC2309QuantityExceedsLimit',
    type: 'error',
  },
  {
    inputs: [],
    name: 'MintToZeroAddress',
    type: 'error',
  },
  {
    inputs: [],
    name: 'MintZeroQuantity',
    type: 'error',
  },
  {
    inputs: [],
    name: 'OwnerQueryForNonexistentToken',
    type: 'error',
  },
  {
    inputs: [],
    name: 'OwnershipNotInitializedForExtraData',
    type: 'error',
  },
  {
    inputs: [],
    name: 'TransferCallerNotOwnerNorApproved',
    type: 'error',
  },
  {
    inputs: [],
    name: 'TransferFromIncorrectOwner',
    type: 'error',
  },
  {
    inputs: [],
    name: 'TransferToNonERC721ReceiverImplementer',
    type: 'error',
  },
  {
    inputs: [],
    name: 'TransferToZeroAddress',
    type: 'error',
  },
  {
    inputs: [],
    name: 'URIQueryForNonexistentToken',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'approved',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'Approval',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'operator',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'bool',
        name: 'approved',
        type: 'bool',
      },
    ],
    name: 'ApprovalForAll',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'fromTokenId',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'toTokenId',
        type: 'uint256',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
    ],
    name: 'ConsecutiveTransfer',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'Transfer',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'approve',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
    ],
    name: 'balanceOf',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    name: 'cidv0Hashes',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'explicitOwnershipOf',
    outputs: [
      {
        components: [
          {
            internalType: 'address',
            name: 'addr',
            type: 'address',
          },
          {
            internalType: 'uint64',
            name: 'startTimestamp',
            type: 'uint64',
          },
          {
            internalType: 'bool',
            name: 'burned',
            type: 'bool',
          },
          {
            internalType: 'uint24',
            name: 'extraData',
            type: 'uint24',
          },
        ],
        internalType: 'struct IERC721A.TokenOwnership',
        name: 'ownership',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256[]',
        name: 'tokenIds',
        type: 'uint256[]',
      },
    ],
    name: 'explicitOwnershipsOf',
    outputs: [
      {
        components: [
          {
            internalType: 'address',
            name: 'addr',
            type: 'address',
          },
          {
            internalType: 'uint64',
            name: 'startTimestamp',
            type: 'uint64',
          },
          {
            internalType: 'bool',
            name: 'burned',
            type: 'bool',
          },
          {
            internalType: 'uint24',
            name: 'extraData',
            type: 'uint24',
          },
        ],
        internalType: 'struct IERC721A.TokenOwnership[]',
        name: '',
        type: 'tuple[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'faucet',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
    ],
    name: 'faucetTo',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'getApproved',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'operator',
        type: 'address',
      },
    ],
    name: 'isApprovedForAll',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'name',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'ownerOf',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'safeTransferFrom',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
      {
        internalType: 'bytes',
        name: '_data',
        type: 'bytes',
      },
    ],
    name: 'safeTransferFrom',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'operator',
        type: 'address',
      },
      {
        internalType: 'bool',
        name: 'approved',
        type: 'bool',
      },
    ],
    name: 'setApprovalForAll',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes4',
        name: 'interfaceId',
        type: 'bytes4',
      },
    ],
    name: 'supportsInterface',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'symbol',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'tokenURI',
    outputs: [
      {
        internalType: 'string',
        name: 'uri',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
    ],
    name: 'tokensOfOwner',
    outputs: [
      {
        internalType: 'uint256[]',
        name: '',
        type: 'uint256[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'start',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'stop',
        type: 'uint256',
      },
    ],
    name: 'tokensOfOwnerIn',
    outputs: [
      {
        internalType: 'uint256[]',
        name: '',
        type: 'uint256[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'totalSupply',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'transferFrom',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
] as const

const _bytecode =
  '0x610d60604052602e610d0081815260809182919062002d0d610d203981526020016040518060600160405280602e815260200162003243602e913981526020016040518060600160405280602e815260200162002947602e913981526020016040518060600160405280602e8152602001620031b9602e913981526020016040518060600160405280602e815260200162003215602e913981526020016040518060600160405280602e815260200162002387602e913981526020016040518060600160405280602e81526020016200277b602e913981526020016040518060600160405280602e815260200162002b6f602e913981526020016040518060600160405280602e815260200162003499602e913981526020016040518060600160405280602e815260200162003523602e913981526020016040518060600160405280602e8152602001620025af602e913981526020016040518060600160405280602e8152602001620030a5602e913981526020016040518060600160405280602e815260200162002fbf602e913981526020016040518060600160405280602e815260200162003551602e913981526020016040518060600160405280602e8152602001620023e3602e913981526020016040518060600160405280602e8152602001620024f7602e913981526020016040518060600160405280602e815260200162002639602e913981526020016040518060600160405280602e815260200162002553602e913981526020016040518060600160405280602e81526020016200312f602e913981526020016040518060600160405280602e8152602001620026c3602e913981526020016040518060600160405280602e815260200162002dc5602e913981526020016040518060600160405280602e81526020016200343d602e913981526020016040518060600160405280602e815260200162002805602e913981526020016040518060600160405280602e8152602001620028bd602e913981526020016040518060600160405280602e8152602001620032cd602e913981526020016040518060600160405280602e81526020016200346b602e913981526020016040518060600160405280602e815260200162002581602e913981526020016040518060600160405280602e8152602001620029a3602e913981526020016040518060600160405280602e815260200162002bcb602e913981526020016040518060600160405280602e81526020016200329f602e913981526020016040518060600160405280602e81526020016200318b602e913981526020016040518060600160405280602e81526020016200260b602e913981526020016040518060600160405280602e815260200162003329602e913981526020016040518060600160405280602e8152602001620033b3602e913981526020016040518060600160405280602e815260200162002e21602e913981526020016040518060600160405280602e8152602001620029d1602e913981526020016040518060600160405280602e815260200162002a2d602e913981526020016040518060600160405280602e815260200162002c27602e913981526020016040518060600160405280602e815260200162002cb1602e913981526020016040518060600160405280602e815260200162003385602e913981526020016040518060600160405280602e81526020016200315d602e913981526020016040518060600160405280602e815260200162002bf9602e913981526020016040518060600160405280602e8152602001620033e1602e913981526020016040518060600160405280602e815260200162003077602e913981526020016040518060600160405280602e815260200162002c55602e913981526020016040518060600160405280602e815260200162002eab602e913981526020016040518060600160405280602e815260200162002d97602e913981526020016040518060600160405280602e8152602001620025dd602e913981526020016040518060600160405280602e815260200162002975602e913981526020016040518060600160405280602e815260200162003049602e913981526020016040518060600160405280602e815260200162002e4f602e913981526020016040518060600160405280602e8152602001620027d7602e913981526020016040518060600160405280602e815260200162002f35602e913981526020016040518060600160405280602e815260200162002411602e913981526020016040518060600160405280602e8152602001620031e7602e913981526020016040518060600160405280602e815260200162002ae5602e913981526020016040518060600160405280602e815260200162002b41602e913981526020016040518060600160405280602e8152602001620027a9602e913981526020016040518060600160405280602e81526020016200246d602e913981526020016040518060600160405280602e8152602001620029ff602e913981526020016040518060600160405280602e815260200162002861602e913981526020016040518060600160405280602e8152602001620024c9602e913981526020016040518060600160405280602e8152602001620030d3602e913981526020016040518060600160405280602e8152602001620034f5602e913981526020016040518060600160405280602e815260200162002c83602e913981526020016040518060600160405280602e815260200162002d3b602e913981526020016040518060600160405280602e81526020016200340f602e913981526020016040518060600160405280602e81526020016200271f602e913981526020016040518060600160405280602e8152602001620032fb602e913981526020016040518060600160405280602e815260200162002cdf602e913981526020016040518060600160405280602e815260200162003101602e913981526020016040518060600160405280602e81526020016200288f602e913981526020016040518060600160405280602e815260200162002ab7602e913981526020016040518060600160405280602e815260200162002695602e913981526020016040518060600160405280602e8152602001620026f1602e913981526020016040518060600160405280602e815260200162003271602e913981526020016040518060600160405280602e8152602001620034c7602e913981526020016040518060600160405280602e815260200162002b9d602e913981526020016040518060600160405280602e815260200162002919602e913981526020016040518060600160405280602e815260200162002f07602e913981526020016040518060600160405280602e815260200162002667602e913981526020016040518060600160405280602e815260200162002e7d602e913981526020016040518060600160405280602e815260200162002ed9602e913981526020016040518060600160405280602e815260200162002fed602e913981526020016040518060600160405280602e815260200162002f91602e913981526020016040518060600160405280602e815260200162002d69602e913981526020016040518060600160405280602e815260200162002b13602e913981526020016040518060600160405280602e815260200162002f63602e913981526020016040518060600160405280602e81526020016200301b602e913981526020016040518060600160405280602e815260200162002525602e913981526020016040518060600160405280602e81526020016200274d602e913981526020016040518060600160405280602e815260200162002a89602e913981526020016040518060600160405280602e815260200162003357602e913981526020016040518060600160405280602e8152602001620028eb602e913981526020016040518060600160405280602e81526020016200243f602e913981526020016040518060600160405280602e81526020016200249b602e913981526020016040518060600160405280602e815260200162002a5b602e913981526020016040518060600160405280602e815260200162002833602e913981526020016040518060600160405280602e8152602001620023b5602e913981526020016040518060600160405280602e815260200162002df3602e9139905262000c2a90600890606462000c9a565b5034801562000c3857600080fd5b50604080518082018252600d8082526c41534d427261696e47656e494960981b602080840182905284518086019095529184529083015290600262000c7e838262000e16565b50600362000c8d828262000e16565b5050600080555062000ee2565b82805482825590600052602060002090810192821562000ce5579160200282015b8281111562000ce5578251829062000cd4908262000e16565b509160200191906001019062000cbb565b5062000cf392915062000cf7565b5090565b8082111562000cf357600062000d0e828262000d18565b5060010162000cf7565b50805462000d269062000d87565b6000825580601f1062000d37575050565b601f01602090049060005260206000209081019062000d57919062000d5a565b50565b5b8082111562000cf3576000815560010162000d5b565b634e487b7160e01b600052604160045260246000fd5b600181811c9082168062000d9c57607f821691505b60208210810362000dbd57634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111562000e1157600081815260208120601f850160051c8101602086101562000dec5750805b601f850160051c820191505b8181101562000e0d5782815560010162000df8565b5050505b505050565b81516001600160401b0381111562000e325762000e3262000d71565b62000e4a8162000e43845462000d87565b8462000dc3565b602080601f83116001811462000e82576000841562000e695750858301515b600019600386901b1c1916600185901b17855562000e0d565b600085815260208120601f198616915b8281101562000eb35788860151825594840194600190910190840162000e92565b508582101562000ed25787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6114958062000ef26000396000f3fe60806040526004361061012a5760003560e01c806370a08231116100ab578063a22cb4651161006f578063a22cb4651461032b578063b88d4fde1461034b578063c23dc68f1461035e578063c87b56dd1461038b578063de5f72fd146103ab578063e985e9c5146103c057600080fd5b806370a08231146102895780638462151c146102a957806393492d25146102d657806395d89b41146102f657806399a2557a1461030b57600080fd5b806323b872dd116100f257806323b872dd146101f657806342842e0e146102095780634e6fda641461021c5780635bbb21771461023c5780636352211e1461026957600080fd5b806301ffc9a71461012f57806306fdde0314610164578063081812fc14610186578063095ea7b3146101be57806318160ddd146101d3575b600080fd5b34801561013b57600080fd5b5061014f61014a366004610ea1565b610409565b60405190151581526020015b60405180910390f35b34801561017057600080fd5b5061017961045b565b60405161015b9190610f15565b34801561019257600080fd5b506101a66101a1366004610f28565b6104ed565b6040516001600160a01b03909116815260200161015b565b6101d16101cc366004610f58565b610528565b005b3480156101df57600080fd5b50600154600054035b60405190815260200161015b565b6101d1610204366004610f82565b610538565b6101d1610217366004610f82565b61069d565b34801561022857600080fd5b50610179610237366004610f28565b6106bd565b34801561024857600080fd5b5061025c610257366004610fbe565b610769565b60405161015b9190611070565b34801561027557600080fd5b506101a6610284366004610f28565b6107b5565b34801561029557600080fd5b506101e86102a43660046110b2565b6107c0565b3480156102b557600080fd5b506102c96102c43660046110b2565b610806565b60405161015b91906110cd565b3480156102e257600080fd5b506101d16102f13660046110b2565b610884565b34801561030257600080fd5b50610179610892565b34801561031757600080fd5b506102c9610326366004611105565b6108a1565b34801561033757600080fd5b506101d1610346366004611138565b610983565b6101d161035936600461118a565b6109ef565b34801561036a57600080fd5b5061037e610379366004610f28565b610a30565b60405161015b9190611266565b34801561039757600080fd5b506101796103a6366004610f28565b610a7e565b3480156103b757600080fd5b506101d1610ae7565b3480156103cc57600080fd5b5061014f6103db366004611274565b6001600160a01b03918216600090815260076020908152604080832093909416825291909152205460ff1690565b60006301ffc9a760e01b6001600160e01b03198316148061043a57506380ac58cd60e01b6001600160e01b03198316145b806104555750635b5e139f60e01b6001600160e01b03198316145b92915050565b60606002805461046a906112a7565b80601f0160208091040260200160405190810160405280929190818152602001828054610496906112a7565b80156104e35780601f106104b8576101008083540402835291602001916104e3565b820191906000526020600020905b8154815290600101906020018083116104c657829003601f168201915b5050505050905090565b60006104f882610af4565b61050c5761050c6333d1c03960e21b610b1b565b506000908152600660205260409020546001600160a01b031690565b61053482826001610b25565b5050565b600061054382610bc8565b6001600160a01b0394851694909150811684146105695761056962a1148160e81b610b1b565b60008281526006602052604090208054338082146001600160a01b038816909114176105ad5761059986336103db565b6105ad576105ad632ce44b5f60e11b610b1b565b80156105b857600082555b6001600160a01b038681166000908152600560205260408082208054600019019055918716808252919020805460010190554260a01b17600160e11b17600085815260046020526040812091909155600160e11b8416900361064a576001840160008181526004602052604081205490036106485760005481146106485760008181526004602052604090208490555b505b6001600160a01b0385168481887fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600080a48060000361069457610694633a954ecd60e21b610b1b565b50505050505050565b6106b8838383604051806020016040528060008152506109ef565b505050565b600881815481106106cd57600080fd5b9060005260206000200160009150905080546106e8906112a7565b80601f0160208091040260200160405190810160405280929190818152602001828054610714906112a7565b80156107615780601f1061073657610100808354040283529160200191610761565b820191906000526020600020905b81548152906001019060200180831161074457829003601f168201915b505050505081565b60408051828152600583901b8082016020019092526060915b80156107ad57601f198082019186010135600061079e82610a30565b84840160200152506107829050565b509392505050565b600061045582610bc8565b60006001600160a01b0382166107e0576107e06323d3ad8160e21b610b1b565b506001600160a01b031660009081526005602052604090205467ffffffffffffffff1690565b60606000610813836107c0565b604080516001830160051b8101909152818152909150600080805b84821461087957600061084082610c36565b905060408101516108705780511561085757805193505b87841860601b61087057600183019250818360051b8601525b5060010161082e565b509195945050505050565b61088f816001610c72565b50565b60606003805461046a906112a7565b60608183106108ba576108ba631960ccad60e11b610b1b565b6000548083106108c8578092505b606060006108d5876107c0565b858710908102915081156109775781878703116108f25786860391505b60405192506001820160051b8301604052600061090e88610a30565b90506000816040015161091f575080515b60005b61092b8a610c36565b9250604083015161095a5782511561094257825191505b8a821860601b61095a57600101600581901b86018a90525b60018a019950888a148061096d57508481145b1561092257855250505b50909695505050505050565b3360008181526007602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6109fa848484610538565b6001600160a01b0383163b15610a2a57610a1684848484610d31565b610a2a57610a2a6368d2bf6b60e11b610b1b565b50505050565b60408051608081018252600080825260208201819052918101829052606081018290529054821015610a7957610a6582610c36565b90508060400151610a795761045582610e13565b919050565b6060604051806060016040528060388152602001611428603891396008610aa66064856112e1565b81548110610ab657610ab6611303565b90600052602060002001604051602001610ad1929190611319565b6040516020818303038152906040529050919050565b610af2336001610c72565b565b6000805482108015610455575050600090815260046020526040902054600160e01b161590565b8060005260046000fd5b6000610b30836107b5565b9050818015610b485750336001600160a01b03821614155b15610b6b57610b5781336103db565b610b6b57610b6b6367d9dca160e11b610b1b565b60008381526006602052604080822080546001600160a01b0319166001600160a01b0388811691821790925591518693918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a450505050565b60008181526004602052604081205490600160e01b82169003610c265780600003610a79576000548210610c0657610c06636f96cda160e11b610b1b565b5b50600019016000818152600460205260409020548015610c0757919050565b610a79636f96cda160e11b610b1b565b60408051608081018252600080825260208201819052918101829052606081019190915260008281526004602052604090205461045590610e43565b6000805490829003610c8e57610c8e63b562e8dd60e01b610b1b565b60008181526004602090815260408083206001600160a01b0387164260a01b6001881460e11b17811790915580845260059092528220805468010000000000000001860201905590819003610cec57610cec622e076360e81b610b1b565b818301825b808360007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600080a4818160010191508103610cf1575060005550505050565b604051630a85bd0160e11b81526000906001600160a01b0385169063150b7a0290610d669033908990889088906004016113cd565b6020604051808303816000875af1925050508015610da1575060408051601f3d908101601f19168201909252610d9e9181019061140a565b60015b610df6573d808015610dcf576040519150601f19603f3d011682016040523d82523d6000602084013e610dd4565b606091505b508051600003610dee57610dee6368d2bf6b60e11b610b1b565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050949350505050565b604080516080810182526000808252602082018190529181018290526060810191909152610455610e4383610bc8565b604080516080810182526001600160a01b038316815260a083901c67ffffffffffffffff166020820152600160e01b831615159181019190915260e89190911c606082015290565b6001600160e01b03198116811461088f57600080fd5b600060208284031215610eb357600080fd5b8135610ebe81610e8b565b9392505050565b60005b83811015610ee0578181015183820152602001610ec8565b50506000910152565b60008151808452610f01816020860160208601610ec5565b601f01601f19169290920160200192915050565b602081526000610ebe6020830184610ee9565b600060208284031215610f3a57600080fd5b5035919050565b80356001600160a01b0381168114610a7957600080fd5b60008060408385031215610f6b57600080fd5b610f7483610f41565b946020939093013593505050565b600080600060608486031215610f9757600080fd5b610fa084610f41565b9250610fae60208501610f41565b9150604084013590509250925092565b60008060208385031215610fd157600080fd5b823567ffffffffffffffff80821115610fe957600080fd5b818501915085601f830112610ffd57600080fd5b81358181111561100c57600080fd5b8660208260051b850101111561102157600080fd5b60209290920196919550909350505050565b80516001600160a01b0316825260208082015167ffffffffffffffff169083015260408082015115159083015260609081015162ffffff16910152565b6020808252825182820181905260009190848201906040850190845b818110156109775761109f838551611033565b928401926080929092019160010161108c565b6000602082840312156110c457600080fd5b610ebe82610f41565b6020808252825182820181905260009190848201906040850190845b81811015610977578351835292840192918401916001016110e9565b60008060006060848603121561111a57600080fd5b61112384610f41565b95602085013595506040909401359392505050565b6000806040838503121561114b57600080fd5b61115483610f41565b91506020830135801515811461116957600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b600080600080608085870312156111a057600080fd5b6111a985610f41565b93506111b760208601610f41565b925060408501359150606085013567ffffffffffffffff808211156111db57600080fd5b818701915087601f8301126111ef57600080fd5b81358181111561120157611201611174565b604051601f8201601f19908116603f0116810190838211818310171561122957611229611174565b816040528281528a602084870101111561124257600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b608081016104558284611033565b6000806040838503121561128757600080fd5b61129083610f41565b915061129e60208401610f41565b90509250929050565b600181811c908216806112bb57607f821691505b6020821081036112db57634e487b7160e01b600052602260045260246000fd5b50919050565b6000826112fe57634e487b7160e01b600052601260045260246000fd5b500690565b634e487b7160e01b600052603260045260246000fd5b60008351602061132c8285838901610ec5565b845491840191600090600181811c908083168061134a57607f831692505b858310810361136757634e487b7160e01b85526022600452602485fd5b80801561137b5760018114611390576113bd565b60ff19851688528315158402880195506113bd565b60008b81526020902060005b858110156113b55781548a82015290840190880161139c565b505083880195505b50939a9950505050505050505050565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061140090830184610ee9565b9695505050505050565b60006020828403121561141c57600080fd5b8151610ebe81610e8b56fe68747470733a2f2f6d6574612e67656e2d69692d627261696e732e616c746572656473746174656d616368696e652e78797a2f697066732fa2646970667358221220e9b5eb57efa204b35fe5d68e3a1320168c35db7298421e7d72694c1c7a25a06064736f6c63430008110033516d61554c324c5451775764596d414648417063686f6270354d52314b316245454b734474656d77436137506a53516d647542786e687632376d41704b456b7574387568455a66424d52516e576d6e45336e525163386b6d34567331516d504d36324665747931646f69737133544b33735a775933433732355a4b69354b366d39574c797252576f6979516d584436655134744e756d7142453850474648394c38676962555464596a4c3976335355725648457450365869516d4e58776835416f4b72436e3943446e383465624c425954674652316868777069586367463539706350625434516d55674251644b62316f597570503246733465586b3665547151795139634c4245463556546141416672326243516d65785273397a7658315250434b595165673865487746485332553571667355694d76724a413935434e457966516d5a6f4c4d554c334e53345079424846677a6b3172754b41313964436367575358334637417247633655423562516d5447314d6e4c686e516558676a4d314e524b66537838484a724353473372775757517263664e7a656a365636516d4e71374a6a4d4d466936546d7752743254365857573946794a383565544a5554436d626a7a51387a73436141516d525763763776337263417a796445384b624e616748636339797568534454644c316b3667356f59386544427a516d51516f346133617343775a56326b4a644d4d4c357a3351695570726f79366138794e37694b714d6d5a547875516d52673658777537734b3172443332586838646d43466479416e6453694d5361587a4e63676166694166787767516d6164795350315964315a664836716e7752426e4e6176655a43485063536f574a65484e4c41786d52696d6472516d5471344a4d4d7973725a585a785659334338706a4d544c314859474677586731646371735631617236796a4b516d616d5a3658346939546f79443965544b4343386d64765356594171745a786f3870546446544d686868344e51516d574854654742424635696467374c43474e50786e6a7a32574e4d6774446f327a756a43656b50316350336556516d593479784c686b646b5951534a78426d4e5566327a55596b6d636431717263584841586b3457347a44627938516d59624a64516345434d61376b4b69336e34584c77315a5a533339677437796e335a6a443863366444584b7071516d544d52366b68784237547548533575704b42574a614c766745415370513374385134624e5854454e4d68754a516d57664e356b4a4a6a68533473694b61717737616472393137527a764b45354a6a375964593444694659596578516d5655444469564777726954714665394a576d476b5443515531517945726f3874715546376a4e397456324152516d6556744a374a794357327542594e4d584b776137674c7a636771364a4562737961554755614a397269456a59516d59525245785266633367357441547259504a343561526e384a4c4a36543839353959737654506a6a68455572516d57667562525777665548486157684d4279377275646e58547078726f66756d7169636f525239554241587350516d5348673641476f576f78536359623256453253336934514d7533714d687575724e794354347354684c6d7373516d505653654c44583965676f7a6558356e5a515231515641416f7853627a7971375775524a3267744a646e6776516d5a744c393757456f484132484b4c537a5a373479394d664d396e6d465773694d716952797765714c38696b58516d64716455524e6452315a6b4e734d6e794441615a486f5a50573768634e6d384a6e4e584347504332325a576b516d58516956503451484e6652454e5532645950797a34707971666f7343363761504a57376e3433543577544147516d594d42363771786538475268644d626a4739344375367270755666636531726b5a4d564b4c7779456444545a516d524e5a41484b5358706d3433346958477545434b5659556842507269727a745637386b38395572484b50516b516d64514b36763572465838364c515042444446373548556967425a6a4d384432655a624755617a7a3968557547516d63793472664866544a58727265795468344752505379355146315a4a654a764e627161577a396a3335443931516d56524b326b73656d54566b545577583264644a7541344d3665756e56536834595331797a7979426d55704b46516d61787446636f63444d77324a6538335a6570456e4a7a3673566e32784544427051717572586f765175377468516d587176644a4e4b3661326e353555614a4d367576667951654a4c64657638444650326e79646a53544b31517a516d5867453732314d3355506d764650475354584a43466a4d514739413455445563514c3763554b51684e346668516d517863747064575556694c337966383754314b4c7037477153647639514a3946797945366661527035726579516d55464c4645696843726733476e753846505069437458396d7865396262437258656a7435486f524c4539374e516d54507172774c396d3666376e766e66444d483677505262334d5375455258677339345a62786843553148706a516d615354464171756358387134453948486474424572593638664e7538675645786f556242626a4b484c4e6d4d516d5a59544b5768394b4d3856585952423972645a476b647254676235505177733975314678425531786b7a6d57516d5844396a6865596776764b44584c5a47596f717a744a4556667251377942364e534b61514b6d45534c6f3470516d5a715272674b33314a795353615071327847626b78624761505741446b56587745716a6a6a476b3755486f53516d556e765332697561596a594a567239564a795434646b32655a644c757a754162435935445068567075666f38516d566f626a334d7a64564247795832674876396364673672374157546d42577335523668784b45706939617655516d597676716d6f4a69514d476e516868455443393532734657687137473841587339513862715675736a4d504c516d5873616b616543766872596b6d516e583150665558664d764d6150704d6f4546674e356b67376e4741546d57516d596669755a765963714b73476f796e416172437031476d357063576159413877737a646962435a4a6931324c516d6567766142654d4d3445346b563847716e325439643674716b7a345255463332345043326a4e674141564b56516d564532735a32505048334133364469396d78357063796d686934713665563975343741435a62745a50425659516d616e44695232347a4c697468537356476447334c5062743947744c63654d426944525574314c39486871594b516d61616b4736524542715942374269655143353452746b6172587935655062385479794b3161684a7072506b74516d624b504a78646a373161635866436a696b7653395177666d796b36463153566b7934575068536a443467537a516d64486d7974547832764e796e4e4c32686a367738646e4275314c316967577439747a4853444734526b64705a516d6141455a674872716534576f55387758717268356f31485372446370754635574d6a505434737150534d6939516d63393366554c65516a37566850353168436a7a6354596d536152313333377941625836683546444d46727064516d616454787944586f6f7459704147466b6a5a4c4e6b457237446d4b764a38626f4a7776676479636a38747262516d54647248684d343532646d575379775a386465764e5a663750795946505954424b546244673564614d365269516d59473551795a573458354677667368783562766850746f795839553355547476316458326e5a37555839454d516d656e54384765523271797635643551346a4b5972516a764231376a566144426d737345504136527335774354516d58677833584771766f426b7171487953414c4d704c6a46313844337833437541556f3539676a387a71394a6a516d616b714e4e7048754561444d55756e6d565151713539797873566f79593947436d6b79317769503336636847516d516e66775a4c773953744862346e433974763552743764334d59747a746a6976324a4179364c555841536633516d62534c71397544543354564156335667477073686d745a70594a334e7873506d366f7a6e4a62786135377871516d514e4651454736473951666f327555705862775557695872785253454169346d41657055674d573759533432516d5171483431355854644a47675439624a764d386f723863746d476f42586476544b3846476a53786b6a667375516d583331684539384b4a573775324d6a3232475972735143365652643862454136755644456a6e7a53476e5159516d596f705262685a4e625654725979724856416f70713669507739756b513656466d64454b4158714668397953516d6479424446483855466d743378756d5062746977364c6e554c4458776636726f3671525a45654176726b7155516d524d546937636968566d6e61575569315a416f43476756366575316462626a4a4a48767a6a53614e3761464c516d594e673257477371487a6b5a736f4e4a3863534e6f484b3179774d444a67504a6157586a5669765742417252516d65736d56424d4b536e636863676869556444586f6b6d666f693445767262324555776f4775487061367a4c54516d616e394475487941366a37547655637a47426d334e55326a787464366a3839626d37615857737061676a4538516d52343445723235516e646e357770396366697261637770616559726f46564e31663257696a4c7a316442656e516d59446b684b7952784362426b6247393175615651313852577a454c666a776b74544737754848354a7759446b516d5a447269595a4c47354d4c3543653758726e43504748776153544b5063597173626635504c777354656f784c516d50664b62736f534857366a715a6834433836764d447464755862697369385070713335345133537266667a41516d63797170324545476d6446786e7778363869564c666354395a74464e525a487861623242396b685339624b6b516d616868486b756e6355367273464d5134707951766a555578336144645159466b635234756b6a634250683536516d5532796f75534633453753467a627956354e697444464d51797859464b416758733535536565486577375944516d63333275464771656539684661354277574d774e794c685871533436636441723543683469686756476e3962516d515533475478394831427833386e6b52456f796d745566694d3144446e425a7845507647334468625a4e504c516d61756f4b6e6d5a55577859563544716252775246754c4a444b5877527245735762786b4b346b344a4275424b516d51557368376e65524236634335486d486e426868516a536953336439447248514e54596f364b356861644e76516d63754654424e33553371367375354766524d6978487535745a37416139656577794d59664e52454e6d326e41516d5636577342457553727474766564344372523768436d5369364a756f34694a71503871316e376264666d6339516d504b68566a74464277745843486138714d566a4b6a587a69317861427a5270677a4a31766361744436347072516d65464a63785a6f34696b4a6f795871717a714676414a5869455665615934756e6d793161776d66314443526d516d6165464d32754a427958386e5a746a333161716f4d6a57396b6d785263715351386f456a4552466265565a56516d5747384d384c477732724d4358464c6775656d784e65766b567338636b697647597774704139383763547946516d52424551466f62626a6947785a38476755386f457a33445839654e4b36397a45676d434e54574a6361523648516d5973677646653943764e6d7565575474435635574866485245724e613233426f736f766f6861585375456e68516d52797579684766524d746f72786733567539716e467132795a4c714a3575686959545131486a546d4435774e516d586161557538624e415a4d6477413334334d6168615544436a5644764c6b657161655548784a69723542354d516d564e6f473152316d46487464574e5070615079724236556632754472434738644e6771476a4d6f564e675175516d6551637052694d62597a6170423476417448337446743450644564365a62377037723159324d394b73745177516d65387a77574d3731383146324d4c375639776b314869375346757547613345654c4c4e755a486a524142794b516d537a4e3346707763315933506a544831684a6a63537143447a47383152626b69584736573575627864635944'

type MockBrainConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>

const isSuperArgs = (
  xs: MockBrainConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1

export class MockBrain__factory extends ContractFactory {
  constructor(...args: MockBrainConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args)
    } else {
      super(_abi, _bytecode, args[0])
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> },
  ): Promise<MockBrain> {
    return super.deploy(overrides || {}) as Promise<MockBrain>
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {})
  }
  override attach(address: string): MockBrain {
    return super.attach(address) as MockBrain
  }
  override connect(signer: Signer): MockBrain__factory {
    return super.connect(signer) as MockBrain__factory
  }

  static readonly bytecode = _bytecode
  static readonly abi = _abi
  static createInterface(): MockBrainInterface {
    return new utils.Interface(_abi) as MockBrainInterface
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider,
  ): MockBrain {
    return new Contract(address, _abi, signerOrProvider) as MockBrain
  }
}
