/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from 'ethers'
import type { Provider } from '@ethersproject/providers'
import type {
  IComputeManager,
  IComputeManagerInterface,
} from '../../../../../lib/protocol-core/contracts/interfaces/IComputeManager'

const _abi = [
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'index',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'getComputeOptionDisbursement',
    outputs: [
      {
        internalType: 'address[]',
        name: 'addresses',
        type: 'address[]',
      },
      {
        internalType: 'uint256[]',
        name: 'amounts',
        type: 'uint256[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'index',
        type: 'uint256',
      },
      {
        internalType: 'uint64',
        name: 'startTime',
        type: 'uint64',
      },
      {
        internalType: 'uint64',
        name: 'units',
        type: 'uint64',
      },
    ],
    name: 'getComputeOptionSLA',
    outputs: [
      {
        internalType: 'uint64',
        name: 'maxTime',
        type: 'uint64',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'index',
        type: 'uint256',
      },
      {
        internalType: 'uint64',
        name: 'units',
        type: 'uint64',
      },
    ],
    name: 'getComputeOptionUnitCost',
    outputs: [
      {
        internalType: 'uint256',
        name: 'cost',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes4',
        name: 'interfaceId',
        type: 'bytes4',
      },
    ],
    name: 'supportsInterface',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
] as const

export class IComputeManager__factory {
  static readonly abi = _abi
  static createInterface(): IComputeManagerInterface {
    return new utils.Interface(_abi) as IComputeManagerInterface
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider,
  ): IComputeManager {
    return new Contract(address, _abi, signerOrProvider) as IComputeManager
  }
}
